<apex:page id="ShowCase" Controller="ShowCasesController"
	showHeader="false" applyHtmlTag="false" docType="html-5.0"
	standardStylesheets="false" action="{!PageLoad}">
    <html>
        <head>
            <meta http-equiv="X-UA-Compatible" content="IE=edge" />
            <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"/>

<c:CFCU_Standard_Scripts_Component />
 <script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/jquery.min.js')}"></script>
<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/jquery.validate.js')}"></script>
<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/knockout-3.4.0.js')}"></script>

<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/knockout.mapping-latest.js')}"></script>

<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/moment.js')}"></script>

<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/bootstrap.min.js')}"></script>
<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/bootstrap-select.min.js')}"></script>
<script	src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/ie10-viewport-bug-workaround.js')}"></script>
<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/bootstrap.min.css')}"/>
<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/bootstrap-select.min.css')}"/>
<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/simplebar.css')}"/>
<style>
@media print {
  a[href]:after {
    content: none !important;
  }
  
}
.highlightedRow{
	background-color: #F0F0F0;
  }
</style>


<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
		<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
		<!--[if lt IE 9]>
			<script src="https://oss.maxcdn.com/libs/html5shiv/3.7.2/html5shiv.min.js"></script>
			<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
		<![endif]-->
   
 
<script type="text/javascript"
		src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js"></script> 
<link rel="stylesheet" type="text/css"
	href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/' + stylesheet)}" />
	 <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/' + sidebar  )}"/> 
 <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/' + Responsivecss  )}"/> 
<!--  	<c:CSS_Responsive_Chevron />  
<c:CSS_Responsive_Spectrum />-->
<style>

<!--
[if lt IE 10]>.btnmargin {
	margin-top: -25px !important;
}

<!
[endif]-->

</style>
		</head>
        
		<body>
            <apex:form id="ShowCaseForm" forceSSL="true">

			<div class="container">
				<!--<div class="row">
					<div class="header">
						<div class="col-xs-12 col-sm-7">
                            <div class="chevron_logo">
								<a href="{!$Site.Prefix}/ShowCases?Type=Messages"><apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/' + imgName)}"
										styleClass="img-responsive" alt="" /></a>
							</div>
						</div>
						<div class="col-xs-12 col-sm-5 text-right">
							<div class="top_action_btn">
								<ul class="topaction_btn_list">
									<li><a class="knowledgelink" target="_blank" href="{!Brand_Help}">Knowledge Base</a></li>
									<li><a href="#" class="btn btn-primary action_close"
										id="btnClose" onclick="window.close();">Close</a></li>
								</ul>
							</div>
						</div>
						<div class="clearfix"></div>
					</div>
				</div>-->
                <br/>
                <div class="col-xs-12 col-sm-12 text-right">
                    <ul class="topaction_btn_list">
                        <a href="#" class="btn btn-primary action_close"
                           id="btnClose" onclick="window.close();">Close</a>
                    </ul>
                </div>
				<div class="row nameContainer">
					<b><span id="UserName"></span></b>
				</div>
				<div class="row">
					<div class="content_area clearfix">
						<div class="sidebar">
							<div class="col-xs-12 col-md-4 col-lg-2">									
								<a href="#" class="btn btn-primary action_submit inqbtn" onclick="CreateInquiry();">Create New Inquiry</a>								
								<div class="sidebar_nav_list">
									<ul class="sb_navlist">
										<li><a href="#" onclick="CallLoadCase()" id="messageNav"><span>Messages</span>
												
										</a>
										</li>
										<li><a href="#" onclick="CallLoadSentMessages()"
											id="sentMessagesNav"><span>Sent <i class="msgstxt">Messages</i></span></a></li>
										<li><a href="#" onclick="CallLoadMarkDeletedCase()"
											id="deletedMessagesNav"><span>Deleted <i class="msgstxt">Messages</i></span></a></li>
										<li><a href="#" onclick="CallLoadMarkSavedCase()"
											id="savedMessagesNav"><span>Saved <i class="msgstxt">Messages</i></span></a></li>
									</ul>
								</div>
							</div>
						</div>
						<div class="tabular_content">
							<div class="col-xs-12 col-md-8 col-lg-10">
								<h3 class="page_heading">Messages &amp; Alerts Inbox (<span data-bind="text: MessageCount" class="messageCount"></span>)</h3>
								<div class="last_updated_msg text-right">
											<span class="txtupdate">Updated</span>
											<span class="updated_status">Updated</span>
										</div>
								<div class="row">
									<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
										<ul class="table_action_tool">
											<li><select id="sortoption" class="form-control selectpicker"
												data-bind="options: sorter.sortOptions, optionsText: 'Name', value: sorter.currentSortOption">

											</select></li><li id="btnDelete"><button type="button"
													class="btn btn-primary disabled_btn btnmargin"
													onClick="GetCheckboxIdforDelete()">Delete</button></li><li id="btnSave"><button type="button"
													class="btn btn-primary disabled_btn btnmargin"
													onClick="GetCheckboxIdforSave()">Save</button></li><li id="btnDelete1"><button type="button"
													class="btn btn-primary disabled_btn btnmargin"
													onClick="GetCheckboxIdforDelete1()">Delete</button></li><li id="btnSave1"><button type="button"
													class="btn btn-primary disabled_btn btnmargin"
													onClick="GetCheckboxIdforSave1()">Save</button></li>
													<div class="clearfix"></div>
										</ul>
									</div>
								</div>
								<div class="row">
									<div class="col-xs-12">
										<div id="no-more-tables" class="resptbl">
											<apex:outputPanel id="CasePanel" layout="block">
												<table class="table msg_alert_tble" id="tblcase">
													<thead>

														<tr>
															<th class="firstcell">
															
																<span>All</span>
															
															
															</th>
															<th class="tdCategory"><span>Category</span></th>
															<th class="tdCaseno"><span>Case #</span></th>
                                                            <th class="tdAccNum"><span>Member #</span></th>
															<th class="subject"><span>Subject</span></th>
															<th class=""><span>Date</span></th>
															<th class="lastcell"><span>Expires</span></th>
														</tr>
													</thead>
													<tbody data-bind="foreach: pager.currentPageRecords">

														<tr data-bind="css: (IsMarkRead__c ? '' : 'highlightedRow')">

															<td data-title="All" class="firstcell"><apex:outputText value="<"
																	escape="false" />!-- ko if: Status != 'Closed' --<apex:outputText value=">" escape="false" /> <input type="checkbox"
																class="select_item" value="false" name="CaseSelection"
																onclick="RowSelection(this);"
																style="height: 20px; width: 20px;"
																data-bind="attr: {'id': Id, disabled:'disabled', title:'Please note that the Save and Delete options are available for Closed Cases only.' }" />
																<apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: Status == 'Closed' --<apex:outputText value=">" escape="false" />
																	 <input type="checkbox"
																class="select_item" value="false" name="CaseSelection"
																onclick="RowSelection(this);"
																style="height: 20px; width: 20px;"
																data-bind="attr: {'id': Id}" /> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>

															<td data-title="Category" class="tdCategory"><apex:outputText value="<" escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a
																data-bind="html:Primary_Category__c"
																onclick="CallUpdateIsMarkRead(this);"
																class="color_lightgrey"></a> <apex:outputText value="<"
																	escape="false" />!-- /ko --<apex:outputText value=">"
																	escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a
																data-bind="html:Primary_Category__c"
																onclick="CallUpdateIsMarkRead(this);" class="color_blue"></a>
																<apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>
															
															<td data-title="CaseNumber"><apex:outputText value="<" escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_lightgrey"
																onclick="CallUpdateIsMarkRead(this);"> <span
																	data-bind="html: CaseNumber "></span> 
															</a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_blue"
																onclick="CallUpdateIsMarkRead(this);"> <span data-bind="html: CaseNumber "></span>	</a>
																<apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>
                                                            
                                                            <td data-title="accountNumber"><apex:outputText value="<" escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_lightgrey"
																onclick="CallUpdateIsMarkRead(this);"> <span
																	data-bind="html: MaskedaccountNumber"></span> 
															</a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_blue"
																onclick="CallUpdateIsMarkRead(this);"> <span data-bind="html: MaskedaccountNumber "></span>	</a>
																<apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>
																
																
															<td data-title="Subject" class="subject"><apex:outputText value="<" escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_lightgrey"
																onclick="CallUpdateIsMarkRead(this);">  <span
																	data-bind="html: Subject" class=""></span>
																	<div class="description-div" data-bind="html:Description"></div>
															</a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_blue"
																onclick="CallUpdateIsMarkRead(this);"> <span data-bind="html: Subject" class="text_bold"></span>
																	<div class="description-div" data-bind="html:Description"></div>
															</a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>

															<td data-title="Date"><apex:outputText value="<"
																	escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_lightgrey"
																data-bind="text: moment(CreatedDate).format('MM/DD/YYYY')"
																onclick="CallUpdateIsMarkRead(this);"></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_blue"
																data-bind="text: moment(CreatedDate).format('MM/DD/YYYY')"
																onclick="CallUpdateIsMarkRead(this);"></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>

															<td data-title="Expires" class="lastcell"><apex:outputText value="<"
																	escape="false" />!-- ko if: IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_lightgrey"
																data-bind="text: moment(ExpiresDate).format('MM/DD/YYYY')"
																onclick="CallUpdateIsMarkRead(this);"></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
																	escape="false" />!-- ko if: !IsMarkRead__c --<apex:outputText value=">" escape="false" /> <a class="color_blue"
																data-bind="text: moment(ExpiresDate).format('MM/DD/YYYY')"
																onclick="CallUpdateIsMarkRead(this);"></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></td>
														</tr>
													</tbody>  
												</table>
											</apex:outputPanel>
										</div>
										<div class="row showcasefooter">
											<div class="col-xs-12 col-sm-7">
												<div class="msg_alert_label">
													<ul class="label_color">
														<li><span class="label_color_item label_new"></span>New</li>
														<li><span class="label_color_item label_read"></span>Read</li>
														<!--  <li><span class="label_color_item label_expiring"></span>Expiring</li>
														<li><span
															class="label_color_item label_systemnotices"></span>System
															Notices</li>
														<li><span class="imp_label"> <apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/important.png')}"
																	alt="" />
														</span> Important</li>-->
													</ul>
												</div>
											</div>
											<div class="col-xs-12 col-sm-5">
												<div class="pagination_box clearfix text-right fixed">
													<div class="Pager"></div>
													<div class="NoRecords"></div>

												</div>
											</div>

										</div>
									</div>
								</div>

							</div>
						</div>



					</div>
				</div>

				<div class="row">
					<div class="footer_area">
						<div class="col-xs-12">
							<span style="color: #23527c;">&copy;2021&nbsp;{!CopyRights}</span>
						</div>
					</div>
				</div>
			</div>
</apex:form>
		</body>
	
	<script type="text/javascript"> 
j$ = jQuery.noConflict();
var imgName = '{!ImgName}';
var stylesheet ='{!Stylesheet}';
var sidebar ='{!Sidebar}';
var pageSize = 5;

	var decodeEntities = (function() {
  // this prevents any overhead from creating the object each time
  var element = document.createElement('div');
  
  function decodeHTMLEntities (str) {
    if(str && typeof str === 'string') {
      // strip script/html tags
      str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
      str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
      element.innerHTML = str;
      str = element.textContent;
      element.textContent = '';
    }

    return str;
  }

  return decodeHTMLEntities;
})();
    

j$(document).ready(function()
    {   
    
		
    	
       	j$('#btnDelete1').hide();
		j$('#btnSave1').hide();  
    	validate();
		
		if(SortBy == 'Primary_Category__c')
		{
			SortBy ='Category';
		}
		if(SortBy == '')
		{
			SortBy ='CreatedDate';
		}
		if(SortDir=='')
		{
			SortDir='Desc';
		}
		
		blockUi('Loading...');

		ShowCasesController.LoadCase(TypeOfView,SortBy,SortDir,function(result, event)
		{
		
		var testData = {
		    cases: result.Data,
		    UpdatedDate: result.LastUpdatedMessage,
		    MessageCount : result.MessageCount,
		    Name : result.UserName
		};

		if(testData.cases ==null || testData.cases.length == 0)
		{
			j$('.table_action_tool').hide();
			j$('.Pager').hide();
			j$('.NoRecords').show();
		}
		else{
				j$('.table_action_tool').show();
				j$('.Pager').show();
				j$('.NoRecords').hide();
			}
		
		j$.unblockUI();
		model = new CustomerPageModel(testData.cases, testData.MessageCount);
		ko.applyBindings(model, j$('.container')[0]);
		
		j$('.messageCount').text(testData.MessageCount);
		j$('.updated_status').text(moment(testData.UpdatedDate).format('MM/DD/YYYY') + ' ' + moment(testData.UpdatedDate).format('h:mm a'));
        //j$('#UserName').text('Welcome ' + testData.Name);	
		if(TypeOfView =='Messages')
		{
			j$('#messageNav').css('text-decoration', 'bold');
			j$('#messageNav').addClass('doublearrow');
			j$('#sentMessagesNav').css('text-decoration', 'none');
			j$('#deletedMessagesNav').css('text-decoration', 'none');
			j$('#savedMessagesNav').css('text-decoration', 'none'); 
			j$('#messageNav').css('text-decoration', 'none');
			j$('#sortoption').selectpicker('refresh');
		}
		else if(TypeOfView =='DeletedMessages')
		{
			j$('#messageNav').css('text-decoration', 'none');
			j$('#sentMessagesNav').css('text-decoration', 'none');
			j$('#deletedMessagesNav').css('text-decoration', 'bold');
			j$('#deletedMessagesNav').addClass('doublearrow');
			j$('#savedMessagesNav').css('text-decoration', 'none'); 
			j$('#deletedMessagesNav').css('text-decoration', 'none'); 
			j$('#sortoption').selectpicker('refresh');
		}
		
		else if(TypeOfView =='SavedMessages')
		{
			j$('#messageNav').css('text-decoration', 'none');
			j$('#sentMessagesNav').css('text-decoration', 'none');
			j$('#deletedMessagesNav').css('text-decoration', 'none');
			j$('#savedMessagesNav').css('text-decoration', 'bold'); 
			j$('#savedMessagesNav').addClass('doublearrow');
			j$('#savedMessagesNav').css('text-decoration', 'none'); 
			j$('#sortoption').selectpicker('refresh');
		}
		else
		{
			j$('#messageNav').css('text-decoration', 'none');
			j$('#sentMessagesNav').css('text-decoration', 'bold');
			j$('#sentMessagesNav').addClass('doublearrow');
			j$('#deletedMessagesNav').css('text-decoration', 'none');
			j$('#savedMessagesNav').css('text-decoration', 'none'); 
			j$('#sentMessagesNav').css('text-decoration', 'none'); 
			j$('#sortoption').selectpicker('refresh');
		}
		
											
		
																
		});
		    	
    
    
           
    });
    
 
		      

var model = null;
var SortBy = '';
var SortDir = '';


function blockUi (message)
	{
			j$.blockUI({ css: { 
	            border: 'none', 
	            padding: '15px', 
	            backgroundColor: '#000', 
	            '-webkit-border-radius': '10px', 
	            '-moz-border-radius': '10px', 
	            opacity: .5, 
	            color: '#fff' 
	        	},
	        	 message: '<h1>' + message + '</h1>' 
	        	
	        	}); 
	}
	
	


function RowSelection(obj)
{
	var checkboxid;
   	 checkboxid = obj.id;
   	 if(j$('#'+checkboxid ).is(':checked'))
   	 {
   	 	j$(obj).parent().parent().addClass('selected_row');
   	 }
   	 else{
		j$(obj).parent().parent().removeClass('selected_row');
		}
}

function ChangeSortDirection()
{
	if(model.sorter.currentSortDirection().Name == "Asc")
	{
		model.sorter.currentSortDirection(model.sorter.sortDirections()[1])
	}
	else
	{
		model.sorter.currentSortDirection(model.sorter.sortDirections()[0])
	}
}
function SortType(type)
{
	var str= null;
	
	 if(type == "Category")
	{
		model.sorter.currentSortOption(model.sorter.sortOptions()[0]);
	}
	
	else if(type == "CaseNumber")
	{
		model.sorter.currentSortOption(model.sorter.sortOptions()[1]);
	}
	else if(type == "Subject")
	{
		model.sorter.currentSortOption(model.sorter.sortOptions()[2]);
	}
	else if(type == "CreatedDate")
	{
		model.sorter.currentSortOption(model.sorter.sortOptions()[3]);
	}
	
	else if(type == "ExpiresDate")
	{
		model.sorter.currentSortOption(model.sorter.sortOptions()[4]);
	}
	
	
	
	
	if (model.sorter.currentSortOption().Name == type)
	
	{
		ChangeSortDirection();
	}
	else
	{
		model.sorter.currentSortDirection(model.sorter.sortDirections()[0]);
	}
}

	function CustomerModel(data)
	{
		if (!data)
		{
			data = {};
		}
		
		var self = this;
		self.CaseNumber = data.casenumber;
        self.accountNumber = data.accountNumber;
        self.MaskedaccountNumber = data.MaskedaccountNumber;
		self.Primary_Category__c = data.PrimaryCategory;
		self.Description = decodeEntities(data.Description);
		self.Priority = data.Priority;
		self.Status = data.Status;
		self.Subject = data.Subject;
		self.CreatedDate = data.CreatedDate;
		self.Id = data.Id;
		self.CommentBody = data.CommentBody;
		self.IsMarkRead__c = data.IsMarkRead;
		self.ExpiresDate = data.ExpiresDate;
		
	}	

function CustomerPageModel(data, messageCount)
{
	if (!data)
	{
		data = {};
	}
	
	
	var self = this;
	self.cases = ExtractModels(self, data, CustomerModel);
		
	self.MessageCount = messageCount;
	var filters = [		
		{
			Type: "text",
			Name: "Primary_Category__c",
			Value: ko.observable(""),
			RecordValue: function(record) { return record.Primary_Category__c; }
		},		
		{
			Type: "text",
			Name: "CreatedDate",
			Value: ko.observable(""),
			RecordValue: function(record) { return record.CreatedDate; }
		}
		
	];
	var sortOptions = [
			
		{
			Name: "Sort By",
			Value: "CreatedDate",
			Sort: function(left, right) { return CompareInteger(left.CreatedDate, right.CreatedDate); }
		},
		{
			Name: "Category",
			Value: "Primary_Category__c",
			Sort: function(left, right) { return CompareCaseInsensitive(left.Primary_Category__c, right.Primary_Category__c); }
		},
		{
			Name: "Case Number",
			Value : "CaseNumber",
			Sort: function(left, right) { return CompareInteger(left.CaseNumber, right.CaseNumber); }
			
		},
		{
			Name: "Subject",
			Value : "Subject",
			Sort: function(left, right) { return CompareCaseInsensitive(left.Subject, right.Subject); }
			
		},
		{
			Name: "Date",
			Value: "CreatedDate",
			Sort: function(left, right) { return CompareInteger(left.CreatedDate, right.CreatedDate); }
		},
		{
			Name: "Expires",
			Value : "ExpiresDate",
			Sort: function(left, right) { return CompareInteger(left.ExpiresDate, right.ExpiresDate); }
			
		}
		
        
	];
	
	self.filter = new FilterModel(filters, self.cases);
	self.sorter = new SorterModel(sortOptions, self.filter.filteredRecords);
	self.pager = new PagerModel(self.sorter.orderedRecords);
	
}

function PagerModel(records)
{
	var self = this;
	self.pageSizeOptions = ko.observableArray([5]);
	
	self.records = GetObservableArray(records);
	self.currentPageIndex = ko.observable(self.records().length > 0 ? 0 : -1);
	self.currentPageSize = ko.observable(pageSize);
	self.recordCount = ko.computed(function() {
		return self.records().length;
	});
	
	
	self.maxPageIndex = ko.computed(function() {
		return Math.ceil(self.records().length / self.currentPageSize()) - 1;
	});
	self.currentPageRecords = ko.computed(function() {
		var newPageIndex = -1;
		var pageIndex = self.currentPageIndex();
		var maxPageIndex = self.maxPageIndex();
		if (pageIndex > maxPageIndex)
		{
			newPageIndex = maxPageIndex;
		}
		else if (pageIndex == -1)
		{
			if (maxPageIndex > -1)
			{
				newPageIndex = 0;
			}
			else
			{
				newPageIndex = -2;
			}
		}
		else
		{
			newPageIndex = pageIndex;
		}
		
		if (newPageIndex != pageIndex)
		{
			if (newPageIndex >= -1)
			{
				self.currentPageIndex(newPageIndex);
			}

			return [];
		}

		var pageSize = self.currentPageSize();
		var startIndex = pageIndex * pageSize;
		var endIndex = startIndex + pageSize;
		var pager ='';
		return self.records().slice(startIndex, endIndex);
	}).extend({ throttle: 5 });
	self.moveFirst = function() {
	
			j$.blockUI({ css: { 
	            border: 'none', 
	            padding: '15px', 
	            backgroundColor: '#000', 
	            '-webkit-border-radius': '10px', 
	            '-moz-border-radius': '10px', 
	            opacity: .5, 
	            color: '#fff' 
	        } }); 
	 
	       setTimeout(j$.unblockUI, 500); 
		self.changePageIndex(0);		
	};
	self.movePrevious = function() {
		
		j$.blockUI({ css: { 
            border: 'none', 
            padding: '15px', 
            backgroundColor: '#000', 
            '-webkit-border-radius': '10px', 
            '-moz-border-radius': '10px', 
            opacity: .5, 
            color: '#fff' 
        } }); 
 
       setTimeout(j$.unblockUI, 500); 
       self.changePageIndex(self.currentPageIndex() - 1);		
	};
	self.moveNext = function() {
			
				j$.blockUI({ css: { 
	            border: 'none', 
	            padding: '15px', 
	            backgroundColor: '#000', 
	            '-webkit-border-radius': '10px', 
	            '-moz-border-radius': '10px', 
	            opacity: .5, 
	            color: '#fff' 
	        } }); 
	 
	       setTimeout(j$.unblockUI, 500); 
       		self.changePageIndex(self.currentPageIndex() + 1);		
		
	};
	self.moveLast = function() {
	
				j$.blockUI({ css: { 
		            border: 'none', 
		            padding: '15px', 
		            backgroundColor: '#000', 
		            '-webkit-border-radius': '10px', 
		            '-moz-border-radius': '10px', 
		            opacity: .5, 
		            color: '#fff' 
		        } }); 
		 
		       setTimeout(j$.unblockUI, 500); 
			self.changePageIndex(self.maxPageIndex());		
	};
	self.changePageIndex = function(newIndex) {
		if (newIndex < 0
			|| newIndex == self.currentPageIndex()
			|| newIndex > self.maxPageIndex())
		{
			return;
		}

		self.currentPageIndex(newIndex);
	};
	self.onPageSizeChange = function() {
		self.currentPageIndex(0);
	};
	self.renderPagers = function() {
		
			
			//pager = "<div><span data-bind=\"text: (pager.currentPageIndex() * pageSize) + 1\"></span> - <span class= \"endindex\" data-bind=\"text: (model.pager.currentPageIndex() * pageSize) + model.pager.currentPageRecords().length \"></span> of <span data-bind=\"text: pager.recordCount\"></span> <button type=\"button\" class=\"btn-link pageprev\" href=\"#\" data-bind=\"click: pager.moveFirst, enable: pager.currentPageIndex() > 0\">&lt;</button>&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn-link pageprev\" href=\"#\" data-bind=\"click: pager.movePrevious,  enable: pager.currentPageIndex() > 0\" >Prev</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"pagenext btn-link\" href=\"#\" data-bind=\"click: pager.moveNext, enable: pager.currentPageIndex() < pager.maxPageIndex()\">Next</button>&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"pagenext btn-link\" href=\"#\" data-bind=\"click: pager.moveLast, enable: pager.currentPageIndex() < pager.maxPageIndex()\">&gt;</button></div>";
		//	pager = "<div class=\"pagination-number\"><span data-bind=\"text: (pager.currentPageIndex() * pageSize) + 1\"></span> - <span class= \"endindex\" data-bind=\"text: (model.pager.currentPageIndex() *  pageSize) + model.pager.currentPageRecords().length \"></span> of <span data-bind=\"text: pager.recordCount\"></span></div> <div class=\"pagination-button\"><button type=\"button\" class=\"btn-link pageprev\" href=\"#\" data-bind=\"click: pager.moveFirst, enable: pager.currentPageIndex() > 0\">&lt;</button>&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn-link pageprev\" href=\"#\" data-bind=\"click: pager.movePrevious,  enable: pager.currentPageIndex() > 0\" >Prev</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"pagenext btn-link\" href=\"#\" data-bind=\"click: pager.moveNext, enable: pager.currentPageIndex() < pager.maxPageIndex()\">Next</button>&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"pagenext btn-link\" href=\"#\" data-bind=\"click: pager.moveLast, enable: pager.currentPageIndex() < pager.maxPageIndex()\">&gt;</button></div>";
   			pager = "<div class=\"pagination-button\"><div class=\"prevnextbtns\"><a href=\"#\" class=\"prev\" data-bind=\"click: pager.moveFirst, enable: pager.currentPageIndex() > 0\"><span class=\"glyphicon glyphicon-chevron-left\"></span></a>&nbsp;&nbsp;&nbsp;<button type=\"button\" class=\"btn-link pageprev\" href=\"#\" data-bind=\"click: pager.movePrevious,  enable: pager.currentPageIndex() > 0\" >Prev</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div><div class=\"pagination-number\"><span data-bind=\"text: (pager.currentPageIndex() * pageSize) + 1\"></span>- <span class= \"endindex\" data-bind=\"text: (model.pager.currentPageIndex() *  pageSize) + model.pager.currentPageRecords().length \"></span> of <span data-bind=\"text: pager.recordCount\"></span></div><div class=\"prevnextbtns\"><button type=\"button\" class=\"pagenext btn-link\" href=\"#\" data-bind=\"click: pager.moveNext, enable: pager.currentPageIndex() < pager.maxPageIndex()\">Next</button>&nbsp;&nbsp;&nbsp;<a href=\"#\" class=\"next\" data-bind=\"click: pager.moveLast, enable: pager.currentPageIndex()< pager.maxPageIndex()\"><span class=\"glyphicon glyphicon-chevron-right\"></span></a></div></div>";
   			j$("div.Pager").html(pager);
			
		
	};
	self.renderNoRecords = function() {
		var message = "<span data-bind=\"visible: pager.recordCount() == 0\">No records found.</span>";
		j$("div.NoRecords").html(message);
		
	};
	
	
		self.renderPagers();
		self.renderNoRecords();
	
}

function SorterModel(sortOptions, records)
{
	var self = this;
	self.records = GetObservableArray(records);
	self.sortOptions = ko.observableArray(sortOptions);
	
	
		self.sortDirections = ko.observableArray([
			{
				Name: "Desc",
				Value: "Desc",
				Sort: true
				
			},
			{
				Name: "Asc",
				Value: "Asc",
				Sort: false
			}]);
	
	
	
		
	self.currentSortOption = ko.observable(self.sortOptions()[0]);
	
	
	self.orderedRecords = ko.computed(function()
	{
		var records = self.records();
		var sortOption = self.currentSortOption();
		
		
		if(sortOption.Value == 'CreatedDate' || sortOption.Value == 'ExpiresDate')
		{
			self.currentSortDirection = ko.observable(self.sortDirections()[0]);
		}
		else
		{
			self.currentSortDirection = ko.observable(self.sortDirections()[1]);
		}
		
		var sortDirection = self.currentSortDirection();
		
		if (sortOption == null || sortDirection == null)
		{
			return records;
		}
		
		SortBy = sortOption.Value;
		SortDir = sortDirection.Name;
		
		var sortedRecords = records.slice(0, records.length);
		
		
		SortArray(sortedRecords, sortDirection.Sort, sortOption.Sort);
		return sortedRecords;
	}).extend({ throttle: 5 });
}


function FilterModel(filters, records)
{
	var self = this;
	self.records = GetObservableArray(records);
	self.filters = ko.observableArray(filters);
	self.activeFilters = ko.computed(function() {
		var filters = self.filters();
		var activeFilters = [];
		for (var index = 0; index < filters.length; index++)
		{
			var filter = filters[index];
			if (filter.CurrentOption)
			{
				var filterOption = filter.CurrentOption();
				if (filterOption && filterOption.FilterValue != null)
				{
					var activeFilter = {
						Filter: filter,
						IsFiltered: function(filter, record)
						{
							var filterOption = filter.CurrentOption();
							if (!filterOption)
							{
								return;
							}

							var recordValue = filter.RecordValue(record);
							return recordValue != filterOption.FilterValue;NoMat
						}
					};
					activeFilters.push(activeFilter);
				}
			}
			else if (filter.Value)
			{
				var filterValue = filter.Value();
				if (filterValue && filterValue != "")
				{
					var activeFilter = {
						Filter: filter,
						IsFiltered: function(filter, record)
						{
							var filterValue = filter.Value();
							filterValue = filterValue.toUpperCase();
							
							var recordValue = filter.RecordValue(record);
							recordValue = recordValue.toUpperCase();
							return recordValue.indexOf(filterValue) == -1;
						}
					};
					activeFilters.push(activeFilter);
				}
			}
		}

		return activeFilters;
	});
	self.filteredRecords = ko.computed(function() {
		var records = self.records();
		var filters = self.activeFilters();
		if (filters.length == 0)
		{
			return records;
		}
		
		var filteredRecords = [];
		for (var rIndex = 0; rIndex < records.length; rIndex++)
		{
			var isIncluded = true;
			var record = records[rIndex];
			for (var fIndex = 0; fIndex < filters.length; fIndex++)
			{
				var filter = filters[fIndex];
				var isFiltered = filter.IsFiltered(filter.Filter, record);
				if (isFiltered)
				{
					isIncluded = false;
					break;
				}
			}
			
			if (isIncluded)
			{
				filteredRecords.push(record);
			}
		}

		return filteredRecords;
	}).extend({ throttle: 200 });
}

function ExtractModels(parent, data, constructor)
{
	var models = [];
	if (data == null)
	{
		return models;
	}

	for (var index = 0; index < data.length; index++)
	{
		var row = data[index];
		var model = new constructor(row, parent);
		models.push(model);
	}

	return models;
}

function GetObservableArray(array)
{
	if (typeof(array) == 'function')
	{
		return array;
	}

	return ko.observableArray(array);
}

function CompareCaseInsensitive(left, right)
{
	if (left == null)
	{
		return right == null;
	}
	else if (right == null)
	{
		return false;
	}

	return left.toUpperCase() <= right.toUpperCase();
}
function CompareInteger(left, right)
{
	if (left == null)
	{
		return right == null;
	}
	else if (right == null)
	{
		return false;
	}

	return left <= right ;
}

function GetOption(name, value, filterValue)
{
	var option = {
		Name: name,
		Value: value,
		FilterValue: filterValue
	};
	return option;
}

function SortArray(array, direction, comparison)
{
	if (array == null)
	{
		return [];
	}

	for (var oIndex = 0; oIndex < array.length; oIndex++)
	{
		var oItem = array[oIndex];
		for (var iIndex = oIndex + 1; iIndex < array.length; iIndex++)
		{
			var iItem = array[iIndex];
			var isOrdered = comparison(oItem, iItem);
			if (isOrdered == direction)
			{
				array[iIndex] = oItem;
				array[oIndex] = iItem;
				oItem = iItem;
			}
		}
	}

	return array;
}


var TypeOfView= '{!typeparam}';

var caseids ='';
var str=''
function GetCheckboxIdforDelete()
{

	str='';
	j$(".select_item").each(function () {
		                                    
	if(j$(this).is(':checked'))
		   {
		   	str += j$(this).attr('id') + ',';}
		                            
		    });
	caseids = str.substring(0, str.length-1); 
	if(j$('[id$=ShowCaseForm]').valid())
		{
		    DeleteCases(caseids);
		}
		else
    	{
    		j$('#CaseSelection-error').css('color','red');
    	}
    
}
function GetCheckboxIdforSave()
{
	str='';
	j$(".select_item").each(function () {
                                    
                  if(j$(this).is(':checked'))
                  {  
                  	str += j$(this).attr('id') + ',';
                  }
                   
                });
  					
   caseids = str.substring(0, str.length-1); 
   if(j$('[id$=ShowCaseForm]').valid())
    	{
    		 SaveCases(caseids);
    	}
    	else
    	{
    		j$('#CaseSelection-error').css('color','red');
    	}

}
function SaveCases(caseids)
{
	ShowCasesController.ButtonSave_Click(caseids,Callback);
	
	
}

function DeleteCases(caseids)
{
	ShowCasesController.ButtonDelete_Click(caseids,Callback);
	

}
	
function Callback(result,event)
{	
	RebindMessageView();	
}

function RebindMessageView()
{
	//TypeOfView = 'Messages';
	CallControllermethod(TypeOfView);
}
function GetCheckboxIdforDelete1()
{
	j$(".select_item").each(function () {
                                    
                  if(j$(this).is(':checked'))
                  {	str += j$(this).attr('id') + ',';}
                            
                });
   caseids = str.substring(0, str.length-1); 
   if(j$('[id$=ShowCaseForm]').valid())
    	{
    		 DeleteCases1(caseids);
    	}
    	else
    	{
    		j$('#CaseSelection-error').css('color','red');
    	}
}
function GetCheckboxIdforSave1()
{
	j$(".select_item").each(function () {
                                    
                  if(j$(this).is(':checked'))
                  {  
                  	str += j$(this).attr('id') + ',';
                  }
                   
                });
  					
   			caseids = str.substring(0, str.length-1); 
  			 if(j$('[id$=ShowCaseForm]').valid())
    			{
    				 SaveCases1(caseids);
    			}
		    	else
		    	{
		    		j$('#CaseSelection-error').css('color','red');
		    	}

}

function SaveCases1(caseids)
{
	ShowCasesController.ButtonSave1_Click(caseids,SaveCallback);
	
}
function SaveCallback(result,event)
{	
	RebindDeletedMessagesView();
		
}

function RebindSavedMessagesView()
{
	TypeOfView = 'SavedMessages';
	
	model.pager.currentPageIndex(0);
	
	CallControllermethod(TypeOfView);
	j$('#btnDelete').hide();
	j$('#btnSave').hide();
	j$('#btnDelete1').show();
	j$('#btnSave1').hide();									

}
function DeleteCases1(caseids)
{
	ShowCasesController.ButtonDelete1_Click(caseids,DeleteCallback);

}
function DeleteCallback(result,event)
{	
	RebindSavedMessagesView();	
}

function RebindDeletedMessagesView()
{
	TypeOfView = 'DeletedMessages';
	model.pager.currentPageIndex(0);
	CallControllermethod(TypeOfView);
	j$('#btnDelete').hide();
	j$('#btnSave').hide();
	j$('#btnDelete1').hide();
	j$('#btnSave1').show();
												
	
}
function validate()
    {
	     	
	   	 j$('[id$=ShowCaseForm]').validate();      
	    
		 j$('[class$=select_item]').rules("add", {
	                    required: true,   });
	                   
	   
	}


function CallControllermethod(TypeOfView)
{
		j$.blockUI({ css: { 
            border: 'none', 
            padding: '15px', 
            backgroundColor: '#000', 
            '-webkit-border-radius': '10px', 
            '-moz-border-radius': '10px', 
            opacity: .5, 
            color: '#fff' 
        } }); 
 
       setTimeout(j$.unblockUI, 500); 
	
	
	if(SortBy == 'Primary_Category__c')
		{
			SortBy ='Category';
		}
		if(SortDir=='')
		{
			SortDir='Desc';
		}
		if(SortBy == 'CreatedDate')
		{
			SortDir='Desc';
		}
		
	ShowCasesController.LoadCase(TypeOfView,SortBy,SortDir,function(result, event)
	{
		var testData = {
			cases: result.Data,
			UpdatedDate: result.LastUpdatedMessage,
			MessageCount : result.MessageCount,
			Name : result.UserName
					};

			//	model = new CustomerPageModel(testData.cases, testData.MessageCount);
			if(testData.cases == null || testData.cases.length == 0 )
			{
				j$('.table_action_tool').hide();
				j$('.Pager').hide();
				j$('.NoRecords').show();
			}
			else{
					j$('.table_action_tool').show();
					j$('.Pager').show();
					j$('.NoRecords').hide();
				}
			model.cases = ExtractModels(model, testData.cases, CustomerModel)								
			model.filter.records(model.cases);
			//model.pager =  PagerModel(model.cases);
			
			j$('.messageCount').text(testData.MessageCount);
			j$('.updated_status').text(moment(testData.UpdatedDate).format('MM/DD/YYYY') + ' ' + moment(testData.UpdatedDate).format('h:mm a'));
        	//j$('#UserName').text('Welcome ' + testData.Name);		
			j$('#sortoption').selectpicker('refresh');	
					
		});	
	
}
function CallLoadMarkSavedCase()
{
	TypeOfView = 'SavedMessages';
	model.pager.currentPageIndex(0);
	CallControllermethod(TypeOfView);
	
	j$('#messageNav').css('text-decoration', 'none');
	j$('#sentMessagesNav').css('text-decoration', 'none');
	j$('#deletedMessagesNav').css('text-decoration', 'none');
	j$('#savedMessagesNav').css('text-decoration', 'bold');
	j$('#savedMessagesNav').addClass('doublearrow');
	
	j$('#sentMessagesNav').removeClass('doublearrow');
	j$('#messageNav').removeClass('doublearrow');
	j$('#deletedMessagesNav').removeClass('doublearrow');
	
	j$('#btnDelete').hide();
	j$('#btnSave').hide();
	j$('#btnDelete1').show();
	j$('#btnSave1').hide();
	
		
	
 }
function CallLoadMarkDeletedCase()
{
	
			TypeOfView = 'DeletedMessages';
			model.pager.currentPageIndex(0);
			CallControllermethod(TypeOfView);
			
			j$('#messageNav').css('text-decoration', 'none');
			j$('#sentMessagesNav').css('text-decoration', 'none');
			j$('#deletedMessagesNav').css('text-decoration', 'bold');
			j$('#deletedMessagesNav').addClass('doublearrow');
			j$('#savedMessagesNav').css('text-decoration', 'none');
		
			j$('#sentMessagesNav').removeClass('doublearrow');
			j$('#messageNav').removeClass('doublearrow');
			j$('#savedMessagesNav').removeClass('doublearrow');
		
				j$('#btnDelete').hide();
				j$('#btnSave').hide();
				j$('#btnDelete1').hide();
				j$('#btnSave1').show();
	
	
 }

function CallLoadCase()
{
	TypeOfView = 'Messages';
	model.pager.currentPageIndex(0);
	CallControllermethod(TypeOfView);
		j$('#messageNav').css('text-decoration', 'bold');
		j$('#messageNav').addClass('doublearrow');
		j$('#sentMessagesNav').css('text-decoration', 'none');
		j$('#deletedMessagesNav').css('text-decoration', 'none');
		j$('#savedMessagesNav').css('text-decoration', 'none');
		
		j$('#sentMessagesNav').removeClass('doublearrow');
		j$('#deletedMessagesNav').removeClass('doublearrow');
		j$('#savedMessagesNav').removeClass('doublearrow');
		
		j$('#btnDelete').show();
		j$('#btnSave').show();
		j$('#btnDelete1').hide();
		j$('#btnSave1').hide();
		
		
		
		
 }
 
 function CallLoadSentMessages()
 {
 	TypeOfView = 'SentMessages';
 	model.pager.currentPageIndex(0);
	CallControllermethod(TypeOfView);
		j$('#messageNav').css('text-decoration', 'none');
		j$('#sentMessagesNav').css('text-decoration', 'bold');
		j$('#sentMessagesNav').addClass('doublearrow');
		j$('#deletedMessagesNav').css('text-decoration', 'none');
		j$('#savedMessagesNav').css('text-decoration', 'none');
		
		j$('#messageNav').removeClass('doublearrow');
		j$('#deletedMessagesNav').removeClass('doublearrow');
		j$('#savedMessagesNav').removeClass('doublearrow');
		
		j$('#btnDelete').show();
		j$('#btnSave').show();
		j$('#btnDelete1').hide();
		j$('#btnSave1').hide();
	   
 
 } 
 function CallUpdateIsMarkRead(obj)
 {
 
	var chk_id = j$(obj).closest('tr').find('.select_item').attr('id');
 	window.location.href='{!$Site.CurrentSiteUrl}DisplayCaseAndCaseComment?id=' + chk_id + '&Type=' + TypeOfView + '&SB=' + SortBy + '&SD=' + SortDir;
 	
 }
 
 function CallbackUpdateRead(chk_id)
 { 	
 	
 }

 /*STRY0012065  - Adding warning if member tries to create or reply to a secure email if they don't have an email address.*/
 function CreateInquiry(){
	ShowCasesController.GetEmailAddress(function(result, event)
	{
		j$.blockUI({ css: { 
            border: 'none', 
            padding: '15px', 
            backgroundColor: '#000', 
            '-webkit-border-radius': '10px', 
            '-moz-border-radius': '10px', 
            opacity: .5, 
            color: '#fff' 
        } }); 
 
       setTimeout(j$.unblockUI, 2000); 	
		var Email= result.Email;
	 	if(Email == undefined || Email == '' || Email == null){
			alert(result.ErrorMessage);
		}
		else{
			window.location.href='{!$Site.Prefix}/CreateCase';
		}
	});	
	
 }
 
    </script>
	<script type="text/javascript"
		src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js"></script>
        </html>
</apex:page>