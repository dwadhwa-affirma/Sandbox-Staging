<apex:page id="DisplayCaseandCasecomment" Controller="DisplayCaseController" showHeader="false" action="{!PageLoad}" applyHtmlTag="false" docType="html-5.0"
            standardStylesheets="false">
            
            <html>
                <head>
                    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
                    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"/>
                    
          
        
               
        <c:CFCU_Standard_Scripts_Component />
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/jquery.min.js')}"></script>
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/jquery.validate.js')}"></script>
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/knockout-3.4.0.js')}"></script>
        
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/knockout.mapping-latest.js')}"></script>
        
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/moment.js')}"></script>
        
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/bootstrap.min.js')}"></script>
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/bootstrap-select.min.js')}"></script>
        
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/forcesniffer.min.js')}"></script>
        
        <script src="{!URLFOR($Resource.MessagingAssets ,'MessagingAssets/js/ie10-viewport-bug-workaround.js')}"></script>
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/bootstrap.min.css')}"/>
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/bootstrap-select.min.css')}"/>
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/simplebar.css')}"/>
        <style>
        @media print {
          a[href]:after {
            content: none !important;
          }
        }
        .actbtn a {
        margin-right: 8px;
        margin-bottom: 10px;
    }
    .htmlcontent p
    {
    	margin-top:10px;
    	margin-bottom:10px;
    	
    }
    .htmlcontent
    {
    	font-size: 14px;
    	font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;
    }
    .htmlcontent ul>li
    {
    	margin:3px !important;
    }
        </style>
        
        
        <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
                <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
                <!--[if lt IE 9]>
                    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.2/html5shiv.min.js"></script>
                    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
                <![endif]-->
           
         
        <script type="text/javascript"
                src="https://cdnjs.cloudflare.com/ajax/libs/jquery.blockUI/2.70/jquery.blockUI.min.js"></script> 
        
         <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/' + stylesheet  )}"/> 
             <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/FileUploadCSS.css')}"/>
             
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/simplebar.css')}"/>
             <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/css/' + Responsivecss  )}"/> 
        
        <!--   <c:CSS_Message1 /> -->
          
        <!--  <c:CSS_FileUploadcss />
        <c:CSS_Message1 />
        <c:CSS_simplebar />-->
         <!--<c:CSS_Responsive_Chevron /> -->  
        <!-- <c:CSS_Responsive_Spectrum /> -->
        
        
        
        <apex:includeScript value="/customermessagingcenter/soap/ajax/36.0/connection.js" />
        
        <style>
        
        </style>
                </head>
                <body class="MailDisplayPg">
                
                
                
                
                  <apex:form id="DisplayCaseandCasecommentForm" forceSSL="true">
                    <div class="container" id="container">
                        <div class="row">
                            <div class="header">
                                <div class="col-xs-12 col-sm-7">
                                    <div class="chevron_logo">
                                        <a href="{!$Site.Prefix}/ShowCases?Type=Messages"><apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/' + imgName)}"
                                            styleClass="img-responsive" alt="" /></a>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-5 text-right" style="padding-right:10px">
                                    <div class="top_action_btn">
                                        <ul class="topaction_btn_list">
                                            <li><a class="knowledgelink" target="_blank" href="{!Brand_Help}">Knowledge Base</a></li>
                                            <li style="padding-right:0px;"><a href="#" class="btn btn-primary action_close"
                                                onclick="window.close();">Close</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="content_area clearfix">
                                <div class="col-xs-12 col-md-12 MDParea">
                                    <div class="message_content">
                                        <div class="row nameContainer">
                                            <div id="UserName">
                                                        <b>Welcome {!UserName}</b>
                                                    </div>
                                        </div>  
                                        <div id="messageBindDiv">
                                            <div class="top_nav clearfix">
                                                <div class="row ">
                                                    
                                                    <div class="col-xs-6">
                                                        <a
                                                            data-bind="text: BackToView,attr:{'href':'{!$Site.CurrentSiteUrl}ShowCases?Type=' + TypeofView }"
                                                            class="back_to_inbox"></a>
                                                    </div>
                                                    <div class="col-xs-6 text-right">
                                                        <div class="msg_action">
                                                            <ul class="msg_pagination">
                                                                <li><apex:outputText value="<" escape="false" />!-- ko if: showprev() == true --<apex:outputText value=">"
                                                                        escape="false" /> <a href="#" class="prev " onClick="GetPreviousId();"><span class="glyphicon glyphicon-chevron-left"></span></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<"
                                                                        escape="false" />!-- ko if: showprev() == false --<apex:outputText value=">" escape="false" /> <a href="#"
                                                                    class="prev pag_disab"><span class="glyphicon glyphicon-chevron-left"></span></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></li>
                                                                <li><apex:outputText value="<" escape="false" />!-- ko if: shownext() == true --<apex:outputText value=">"
                                                                        escape="false" /> <a class="next " id="nexttop" onClick="GetNextId();"><span class="glyphicon glyphicon-chevron-right"></span></a> <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> <apex:outputText value="<" escape="false" />!-- ko if: shownext() == false --<apex:outputText value=">" escape="false" /> <a class="next pag_disab"
                                                                    id="nexttop "><span class="glyphicon glyphicon-chevron-right"></span></a> <apex:outputText value="<"
                                                                        escape="false" />!-- /ko --<apex:outputText value=">"
                                                                        escape="false" /></li>
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
        
                                            </div>
                                            
                                            <div class="svdellinks">
                                                <ul class="msg_action_item">
                                                   <apex:outputText value="<" escape="false"/>!-- ko if: model.Status() != 'Closed'  --<apex:outputText value=">" escape="false"/>
                                                       <li class="hidden">
                                                       
                                                       <button id="savelinkbottom" type ="button" class="btn btn-link savebutton" data-bind="text:SaveLink"></button>
                                                       </li><li class="svdellinkpipe hidden">&nbsp;&nbsp;|&nbsp;&nbsp;</li><li class="hidden">
                                                       
                                                       <button id="deletelinkbottom" type ="button" class="btn btn-link  deletebutton" data-bind="text:DeleteLink"></button>
                                                       
                                                       </li>
                                                       <apex:outputText value="<" escape="false"/>!-- /ko --<apex:outputText value=">" escape="false"/>
                                                       <apex:outputText value="<" escape="false"/>!-- ko if: model.Status() == 'Closed'  --<apex:outputText value=">" escape="false"/>
                                                       <li>
                                                       
                                                       <button id="savelinkbottom" type ="button" class="btn btn-link savebutton"
                                                           onClick="CallButtonSave_Click()" data-bind="text:SaveLink"></button>
                                                       </li>
                                                       <li>
                                                       
                                                       <button id="deletelinkbottom" type ="button" class="btn btn-link deletebutton"
                                                           onClick="CallButtonDelete_Click()"
                                                           data-bind="text:DeleteLink"></button>
                                                       
                                                           </li>
                                                       <apex:outputText value="<" escape="false"/>!-- /ko --<apex:outputText value=">" escape="false"/>
                                                   </ul>
                                            </div>
                                            
                                            <div>
                                                <apex:outputPanel id="CaseDescriptionPanel" layout="block">
                                                    <div class="message_info" >
                                                    
                                                        
                                                        <p><!-- ko if: model.PrimaryCategory().length !=0 --> <span style="white-space: pre-line;" data-bind="html: PrimaryCategory()"></span><!-- /ko --> | Case Number #<span data-bind="html: casenumber"></span></p>
                                                        <p><b><!-- ko if: model.Subject().length !=0 --><span style="white-space: pre-line;Font-size:18px;" data-bind="html: Subject"></span><!-- /ko --></b></p>
                                                        
                                                        <p class="htmlcontent" data-bind="html: LatestCommentBySupport"></p>
                                                        
                                                            <div data-bind="visible : model.LatestCommentfiles().length > 0">  
                                                                <ul class="attachments comment_detailed_attachment" style="padding-left:0px;">
                                                                    <li><!--  <apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/attach_icon.png')}"
                                                                            width="21" alt="" />--> Submitted Attachments :</li>
                                                                <apex:outputText value="<" escape="false" />!-- ko foreach: model.LatestCommentfiles() --<apex:outputText value=">" escape="false" />
                                                                    <li><a id="download2" class="pdf_icon" 
                                                                    data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                        </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                    </li>
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                                </ul>
                                                                </div>
                                                        
 																<div data-bind="visible : model.files().length > 0 && model.ShowCaseBelow() == false">  
                                                                <ul class="attachments comment_detailed_attachment" style="padding-left:0px;">
                                                                    <li><!--  <apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/attach_icon.png')}"
                                                                            width="21" alt="" />--> Submitted Attachments :</li>
                                                                <apex:outputText value="<" escape="false" />!-- ko foreach: model.files() --<apex:outputText value=">" escape="false" />
                                                                    <li><a id="download2" class="pdf_icon" 
                                                                    data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                        </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                    </li>
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                                </ul>
                                                                </div>																
                                                        
                                                    </div>
                                                </apex:outputPanel>
                                            </div>
                                            <div class="input_error" id="commentinputerror" style="margin-top:10px !important;display:none;">
                                                <p><i>*This case has been closed to additional responses. For assistance, please initiate a new case through Secure Email.</i></p>
                                        </div>
                                        </div>
                                        
                                        <div id="FileUploadBindDiv">
                                            <div class="input_msg" id="commentinputdiv" style="margin-top:10px !important;">
        
                                                <div class="form-group fglast">
                                                    <label>Enter Message Below</label>
                                                    <apex:outputPanel id="CaseCommentPanel" layout="block">
                                                    
                                                       <apex:inputTextarea id="message" 
                                                            html-placeholder="Type message here..." cols="30" rows="7" richtext="true"
                                                            label="message" StyleClass="form-control" />
                                                      <input type="text" name="commenttext" style="width:0px;border:0px;" id="commenttext"/>
                                                    </apex:outputPanel>
                                                </div>
                                                <div id="fileuploaddiv" >
                                                    
                                                    <label for="attachfile">*Each file not to exceed more
                                                        than 10 MB. Files may take several minutes to upload/download depending on your Internet connection speed.</label>
                                                    <apex:panelGrid columns="2" style="width:100%; table-layout: fixed;"
                                                        id="panelgrid">
                                                        <div class="uploadBox hidden"  id="fileuploadinnerdiv" >
                                                            <div data-bind="foreach:FileUploadList" style="margin-bottom:10px;">
                                                                <div class="fpwrap">
                                                                    <div class="inputfiles des4">
                                                                        <input type="file" data-bind="value:name, attr: {'id': 'filesInput' + $index() }" 
                                                                        accept="application/pdf,image/jpg,image/jpeg,image/png,image/bmp,image/gif"
                                                                        name="upload" class="uploadfile UploadInputfiles" />
                                                                        <label data-bind="value:name, attr: {'for': 'filesInput' + $index() }" class="lblfilename">Upload File</label>
                                                                        <span class="spanfilename">Attach File(s)</span>
                                                                    </div>
                                                                    <a type="button" title="Remove" class="btn clear removebutton" data-bind="click: $parent.remove">Remove File</a>
                                                                    <input data-bind="attr: {'id': 'uploadButton' + $index()}" type="button" title="Upload" class="btn uploadButton" value=" Upload " style="visibility: hidden;" />
                                                                    <div class="clearfix"></div>
                                                                    <p class="fperror">
                                                                        <span class="text text-danger" data-bind="attr: {'id': 'erroricon' + $index() }"></span>
                                                                        <span class="text text-danger" data-bind="attr: {'id': 'errorMessage' + $index() }"></span>
                                                                    </p>
                                                                </div>
        	
                                                            </div>
                                                        </div>
                                                    </apex:panelGrid>
                                                </div>
                                                <a href="#" class="btn btn-primary action_submit"
                                                    onClick="submitform(false);">Reply</a>
                                                 <a href="#" class="btn btn-primary action_submit" id="btnReplyAdd"
                                                    onClick="submitform(true);">Reply and Add File</a>
                                                <apex:commandButton id="cmdSave" value="Save"
                                                    reRender="PageVariables" status="actStatusId"
                                                    style="visibility: hidden;" />
                                                <apex:actionStatus id="actStatusId" onstop="callFileUpload();">
                                                </apex:actionStatus>
                                                <a href="#" class="btn btn-primary action_submit" id="btnAdd"
                                                    data-bind="click: add">Add File</a>
                                                    
                                                    
                                                 
        
                                            </div>
                                            
                                        
                                        </div>
        								
                                        <div id="CommentBindDiv">
                                            <div class="recent_msg">
                                                <div class="top_nav_sec clearfix" >
                                                    <h4>Past Messages</h4>
        
                                                    <a id="expAll" role="button" class="pull-right toggle-text "> <i class="textchange">Expand All</i></a>
                                                </div>
                                                <ul class="newmsg_item_list PMlist">
                                                <apex:outputText value="<" escape="false" />!-- ko foreach: membermessage() --<apex:outputText value=">" escape="false" />
                                                                                 
                                                        <apex:outputText value="<" escape="false" />!-- ko if: CreatedById() == '{!$User.Id}'  --<apex:outputText value=">" escape="false" />
                                                        <li>
                                                        <div class="unamedate">
                                                              <strong>{!UserName}</strong>
                                                              <span data-bind="html: moment(CreatedDate()).format('MMM Do') + ' ' + moment(CreatedDate()).format('h:mm a') + ' (' + moment(CreatedDate()).fromNow() + ')'" ></span>
                                                        </div>
                                                        <div class="collapsedata">
                                                              <div class="shortdata">
                                                                <p data-bind="html: ShortComment , attr:{id: 'shortcomment' + $index()}"></p>
                                                              </div>
                                                              <div class="longdata">
                                                                 <div data-bind="visible : files().length > 0">  
                                                                        <ul class="attachments comment_detailed_attachment PMattachments">
                                                                            <li class="attachimg"><apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/attach_icon.png')}"
                                                                                    width="21" alt="" /> :</li>
                                                                        <apex:outputText value="<" escape="false" />!-- ko foreach: files() --<apex:outputText value=">" escape="false" />
                                                                            <li><a id="download1" class="pdf_icon" data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                                </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                            </li>
                                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                                        </ul>
                                                                    </div>
                                                                <p data-bind="html: FullComment , attr:{id: 'fullcomment' + $index()}"></p>
                                                              </div>
                                                              <a class="toggleComment glyphicon glyphicon-chevron-down" onclick="clickReadMethod(this);" data-bind="attr:{id: 'collapselink' + $index()}" role="button" ></a>
                                                            </div>
                                                            
                                                         </li>
                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                        <apex:outputText value="<" escape="false" />!-- ko if: '{!$User.Id}' != CreatedById() --<apex:outputText value=">" escape="false" />
                                                       <li>
                                                        <div class="unamedate">
                                                              <strong>{!MemberType}</strong>
                                                              <span data-bind="html: moment(CreatedDate()).format('MMM Do') + ' ' + moment(CreatedDate()).format('h:mm a') + ' (' + moment(CreatedDate()).fromNow() + ')'"></span>
                                                        </div>
                                                        <div class="collapsedata">
                                                              <div class="shortdata">
                                                                <p data-bind="html: ShortComment , attr:{id: 'shortcomment' + $index()}"></p>
                                                              </div>
                                                              <div class="longdata">
                                                                 <div data-bind="visible : files().length > 0">  
                                                                        <ul class="attachments comment_detailed_attachment PMattachments">
                                                                            <li class="attachimg"><apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/attach_icon.png')}"
                                                                                    width="21" alt="" /> :</li>
                                                                        <apex:outputText value="<" escape="false" />!-- ko foreach: files() --<apex:outputText value=">" escape="false" />
                                                                            <li><a id="download1" class="pdf_icon" data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                                </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                            </li>
                                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                                        </ul>
                                                                    </div>
                                                                <p data-bind="html: FullComment , attr:{id: 'fullcomment' + $index()}"></p>
                                                              </div>
                                                              <a class="toggleComment glyphicon glyphicon-chevron-down" onclick="clickReadMethod(this);"  data-bind="attr:{id: 'collapselink' + $index()}" ></a>
                                                            </div>
                                                            
                                                         </li>
                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                    <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                </ul>
                                                
                                            
                                            <div>
                                                
                                                </div>
                                            
                                            </div>
                                        </div>
                                        
                                        
                                        
                                        <div class="top_nav clearfix" id="bottomMessageBindDiv">
                                <!-- Inside this -->
                                    
                                    <div id="commentdiv2" class="msg_cont_wrap " data-bind="visible: model.ShowCaseBelow()== true" >
                                                    
                                                    <ul class="newmsg_item_list PMlist">
                                                    
                                                        <apex:outputText value="<" escape="false" />!-- ko if: model.CreatedById() == '{!$User.Id}'  --<apex:outputText value=">" escape="false" />
                                                        <li id="custsupp2">
                                                        <div class="unamedate">
                                                          <strong>{!UserName}</strong>
                                                          <span data-bind="html: moment(CaseCreatedDate()).format('MMM Do') + ' ' + moment(CaseCreatedDate()).format('h:mm a') + ' (' + moment(CaseCreatedDate()).fromNow() + ')'"></span>
                                                        </div>
                                                        <div class="collapsedata">
                                                        <div class="shortdata">
                                                            <p style="white-space: pre-line"  data-bind="html: ShortDescription"></p>
                                                            
                                                        </div>
                                                        <div class="longdata">
                                                             <div data-bind="visible : model.files() && model.files().length > 0" class="attachments comment_detailed_attachment">

                                                                     <ul class="ulattachment comment_detailed_attachment PMattachments">
                                                                   <li class="attachimg"><apex:image url="{!URLFOR($Resource.MessagingAssets,'MessagingAssets/img/attach_icon.png')}"
                                                                                    width="21" alt="" /> :</li>

                                                                <apex:outputText value="<" escape="false" />!-- ko foreach: model.files() --<apex:outputText value=">" escape="false" />
                                                                     
                                                                    <li><a id="download2" class="pdf_icon" data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                        </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                    </li>
                                                                     
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                                </ul>
                                                                
                                                               </div>
                                                            <p  style="white-space: pre-line" data-bind="html: Description " ></p>
                                                            
                                                          </div>
                                                          
                                                          <a  class="toggleComment glyphicon glyphicon-chevron-down"  role="button" aria-expanded="true" data-toggle="collapse" data-bind="attr:{'data-target':  '#Desc'  + ',' + '#shortDesc'}"></a>
                                                            </div>
                                                        </li>
                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                        <apex:outputText value="<" escape="false" />!-- ko if: '{!$User.Id}' != model.CreatedById() --<apex:outputText value=">" escape="false" />
                                                        <li id="custsupp2">
                                                        <div class="unamedate">
                                                          <strong>{!MemberType}</strong>
                                                          <span data-bind="html: moment(CaseCreatedDate()).format('MMM Do') + ' ' + moment(CaseCreatedDate()).format('h:mm a') + ' (' + moment(CaseCreatedDate()).fromNow() + ')'"></span>
                                                        </div>
                                                         <div class="collapsedata">
                                                        <div class="shortdata">
                                                            <p style="white-space: pre-line" data-bind="html: ShortDescription"></p>
                                                            
                                                        </div>
                                                        <div class="longdata">
                                                             <div data-bind="visible : model.files() && model.files().length > 0" class="attachments comment_detailed_attachment">
                                                                <apex:outputText value="<" escape="false" />!-- ko foreach: model.files() --<apex:outputText value=">" escape="false" />
                                                                     
                                                                     <ul class="ulattachment">
                                                                    <li><a id="download2" class="pdf_icon" data-bind="html: filename, attr:{ 'href': downloadurl }, click: downloaddoc, css: { pdf_icon: fileicon() == 'pdf', 'word_icon' : fileicon() == 'docx','excel_icon' : fileicon()=='xlsx','powerpoint_icon' : fileicon()=='pptx','onenote_icon' : fileicon()=='one','jpg_icon' : fileicon()=='jpg','png_icon' : fileicon()=='png'}">
                                                                        </a>&nbsp;(<span data-bind="text:filesize"></span>)
                                                                    </li>
                                                                     </ul>
                                                                     
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                               </div>
                                                            <p  style="white-space: pre-line" data-bind="html: Description " ></p>
                                                            
                                                          </div>
                                                          
                                                          <a  class="toggleComment glyphicon glyphicon-chevron-down"  role="button" aria-expanded="true" data-toggle="collapse" data-bind="attr:{'data-target':  '#Desc'  + ',' + '#shortDesc'}"></a>
                                                           </div> 
                                                        </li>
                                                        
                                                        
                                                        <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                    </ul>
                                                </div>
                                    
                                <!-- Inside this end -->        
                                            <div class="row DPfooterlinks">
                                                
                                                <div class="col-xs-6">
                                                    <a class="back_to_inbox" data-bind="text: BackToView, attr:{'href':'{!$Site.CurrentSiteUrl}ShowCases?Type=' + TypeofView } "></a>
                                                </div>
                                                <div class="col-xs-6 text-right">
                                                    <div class="msg_action">
                                                        <a href="#!" id="back-to-top" class="backtotop">Back to Top</a>
                                                        <ul class="msg_action_item">
                                                        <apex:outputText value="<" escape="false"/>!-- ko if: model.Status() != 'Closed'  --<apex:outputText value=">" escape="false"/>
                                                            <li class="hidden">
                                                            
                                                            <button id="savelinkbottom" type ="button" class="btn btn-link savebutton" data-bind="text:SaveLink"></button>
                                                            </li>
                                                            <li class="hidden">
                                                            
                                                            <button id="deletelinkbottom" type ="button" class="btn btn-link deletebutton" data-bind="text:DeleteLink"></button>
                                                            
                                                                </li>
                                                            <apex:outputText value="<" escape="false"/>!-- /ko --<apex:outputText value=">" escape="false"/>
                                                            <apex:outputText value="<" escape="false"/>!-- ko if: model.Status() == 'Closed'  --<apex:outputText value=">" escape="false"/>
                                                            <li>
                                                            
                                                            <button id="savelinkbottom" type ="button" class="btn btn-link savebutton"
                                                                onClick="CallButtonSave_Click()" data-bind="text:SaveLink"></button>
                                                            </li>
                                                            <li>
                                                            
                                                            <button id="deletelinkbottom" type ="button" class="btn btn-link deletebutton "
                                                                onClick="CallButtonDelete_Click()"
                                                                data-bind="text:DeleteLink"></button>
                                                            
                                                                </li>
                                                            <apex:outputText value="<" escape="false"/>!-- /ko --<apex:outputText value=">" escape="false"/>
                                                        </ul>
                                                        <ul class="msg_pagination">
                                                            <li><apex:outputText value="<" escape="false" />!-- ko if: showprev() == true --<apex:outputText value=">" escape="false" />
                                                             <a href="#" class="prev "
                                                                onClick="GetPreviousId();"></a> 
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> 
                                                                <apex:outputText value="<" escape="false" />!-- ko if: showprev() == false --<apex:outputText value=">" escape="false" />
                                                                 <a href="#"
                                                                class="prev pag_disab"></a> 
                                                                <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" />
                                                            </li>
                                                            <li>
                                                            <apex:outputText value="<" escape="false" />!-- ko if: shownext() == true --<apex:outputText value=">" escape="false" />
                                                             <a class="next " id="nexttop" onClick="GetNextId();"></a> 
                                                             <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /> 
                                                             <apex:outputText value="<" escape="false" />!-- ko if: shownext() == false --<apex:outputText value=">" escape="false" />
                                                              <a class="next pag_disab" id="nexttop "></a> 
                                                                    <apex:outputText value="<" escape="false" />!-- /ko --<apex:outputText value=">" escape="false" /></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
        
                                        </div>
        
        
                                    </div>
                                </div>
                            </div>
                            
                            <div id="imgImageContentDiv" class="top_nav" style="display: none;">
                            <div class="row">
                                <div class="col-xs-1"></div>
                                <div class="col-xs-10">
                                            <br/><br/>
                                    <a style="font-weight: bold;" class="back_to_inbox" onclick="j$('.content_area').show(); j$('#imgImageContentDiv').hide(); ">Back</a>
                                    <br/><br/>
                                    <img class="img-responsive" id="imgImageContent" src="" />
                                    
                                    <iframe class="embed-responsive-item" id="ifrmOtherContent"   src=""></iframe>
                                    
                                </div>
                                
                            </div>
                            
                            </div>
                            
                            
                            
                            <apex:outputPanel id="PageVariables" layout="block">
                                <input type="hidden" class="parentid" id="parentid" value=" " />
        
        
                            </apex:outputPanel>
                        </div>
                        <div class="row">
                            <div class="footer_area">
                                <div class="col-xs-12">
                                    <span>&copy;2017&nbsp;{!CopyRights}</span>
                                </div>
                            </div>
                        </div>
                    </div>
        
        
        
        <button type="button" class="btn btn-info btn-lg showDialog" style="display:none;" data-toggle="modal" data-target="#myModal">App</button>
        <!-- Modal -->
        <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
        
        <!-- Modal content-->
        <div class="modal-content">
        <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Secure Email</h4>
        </div>
        <div class="modal-body dialog-body">
        <p id="DialogText">Some text in the modal.</p>
        </div>
        <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
        </div>
        
        </div>
        </div>
        
        
                    
         </apex:form>
                </body>
           
            <script type="text/javascript"> 
            var allowedDaysAfterClose = 30;
            
            j$ = jQuery.noConflict();
            
            var maxFiles = 5; //to determine max number of files that can be uploaded
            
            var decodeEntities = (function() {
            // this prevents any overhead from creating the object each time
            var element = document.createElement('div');
        
            function decodeHTMLEntities (str) {
                if(str && typeof str === 'string') {
                  // strip script/html tags
                  str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
                  str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
                  element.innerHTML = str;
                  str = element.textContent;
                  element.textContent = '';
                }
            
                return str;
             }
        
          return decodeHTMLEntities;
        })();
            
            var imgName = '{!ImgName}';
            var stylesheet ='{!Stylesheet}'
            var TypeofView = '{!typeparam}';
            var SortBy ='{!SortBy}';
            var SortDirection ='{!SortDirection}';
            var casecomment = '';
            var countAddFile =0;
            var checkfilesize;
           
        if(SortBy == 'Primary_Category__c')
        {
            SortBy ='Category';
        }
        if(SortBy == '')
        {
            SortBy ='CreatedDate';
        }
        if(SortDirection=='')
        {
            SortDirection='Desc';
        }
            
            var __sfdcSessionId = '{!$Api.Session_ID}';
            var model = null;
            var commentmodel = null;
            var filemodel = null;
            
            if (FileReader.prototype.readAsBinaryString === undefined)
             {
                FileReader.prototype.readAsBinaryString = function (fileData) 
                {
                    var binary = "";
                    var pt = this;
                    var reader = new FileReader();
                    reader.onload = function (e)
                    {
                        var data;
                        if (!e) {
                           data = reader.content;
                        }
                        else {
                            data = e.target.result;
                        }
                        var bytes = new Uint8Array(data);
                        var length = bytes.byteLength;
                        for (var i = 0; i < length; i++) 
                        {
                            binary += String.fromCharCode(bytes[i]);
                        }
                        //pt.result  - readonly so assign content to another property
                        pt.content = binary;
                        j$(pt).trigger('onload');
                        }
                             reader.readAsArrayBuffer(fileData);
                         }
            }
             
             
             function uploadFileIE(file, parentId, successCallBack, failureCallBack)
            {       
                    var reader = new FileReader();     
            
                    // Keep a reference to the File in the FileReader so it can be accessed in callbacks
                    reader.file = file; 
            
                    reader.onerror = function(e) 
                    {
                        switch(e.target.error.code) 
                        {
                            case e.target.error.NOT_FOUND_ERR:
                                showCustomAlert('File Not Found!');
                                break;
                            case e.target.error.NOT_READABLE_ERR:
                                showCustomAlert('File is not readable');
                                break;
                            case e.target.error.ABORT_ERR:
                                break; // noop
                            default:
                               showCustomAlert('An error occurred reading this file.');
                                break;
                                
                            if (failureCallBack)
                            {
                                failureCallBack();
                            }
                        };
                    };     
            
                    reader.onabort = function(e) 
                    {
                        j$.unblockUI();
                        showCustomAlert('File read cancelled');
                        j$.blockUI();
                        
                    };
            
                    reader.onload = function(e) 
                    {
                        var att = new sforce.SObject("Attachment");
                        att.Name = this.file.name;
                        att.ContentType = this.file.type;
                        att.ParentId = parentId;
            
                        att.Body = (new sforce.Base64Binary(reader.content)).toString();
            
                        sforce.connection.create([att],
                        {
                            onSuccess : function(result, source) 
                            {
                                if (result[0].getBoolean("success")) 
                                {
                                    console.log("new attachment created with id " + result[0].id);
                                    if (successCallBack)
                                    {
                                        successCallBack(result[0].id);
                                    }
                                } 
                                else 
                                {
                                    console.log("failed to create attachment " + result[0]);
                                    if (failureCallBack)
                                    {
                                        failureCallBack();
                                    }
                                }
                            }, 
                            onFailure : function(error, source) 
                            {
                                console.log("An error has occurred " + error);
                                if (failureCallBack)
                                {
                                        failureCallBack();
                                }
                            }
                        });
                    };
            
                    reader.readAsBinaryString(file);
                
            }
        
        function uploadFileChromeFF(file, parentId, successCallBack, failureCallBack )
        {       
        
                var reader = new FileReader();     
                // Keep a reference to the File in the FileReader so it can be accessed in callbacks
                reader.file = file; 
        
                reader.onerror = function(e) 
                {
                    switch(e.target.error.code) 
                    {
                        case e.target.error.NOT_FOUND_ERR:
                            showCustomAlert('File Not Found!');
                            break;
                        case e.target.error.NOT_READABLE_ERR:
                            showCustomAlert('File is not readable');
                            break;
                        case e.target.error.ABORT_ERR:
                            break; // noop
                        default:
                            showCustomAlert('An error occurred reading this file.');
                            break;
                            
                       if (failureCallBack)
                                {
                                        failureCallBack();
                                }
                    };
                };     
        
                reader.onabort = function(e) 
                {
                    showCustomAlert('File read cancelled');
                };
        
                reader.onloadend = function(e) 
                {
                    var att = new sforce.SObject("Attachment");
                    att.Name = this.file.name;
                    att.ContentType = this.file.type;
                    att.ParentId = parentId;
        
                    var binary = "";
                    var bytes = new Uint8Array(e.target.result);
                    var length = bytes.byteLength;
                    for (var i = 0; i < length; i++) {
                        binary += String.fromCharCode(bytes[i]);
                    }
                    att.Body = (new sforce.Base64Binary(binary)).toString();
        
                    sforce.connection.create([att],
                    {
                        onSuccess : function(result, source) 
                        {
                            if (result[0].getBoolean("success")) 
                            {
                                console.log("new attachment created with id " + result[0].id);
                                if (successCallBack)
                                    {
                                        successCallBack(result[0].id);
                                    }
                            } 
                            else 
                            {
                                console.log("failed to create attachment " + result[0]);
                                if (failureCallBack)
                                {
                                        failureCallBack();
                                }
                            }
                        }, 
                        onFailure : function(error, source) 
                        {
                            console.log("An error has occurred " + error);
                            if (failureCallBack)
                                {
                                        failureCallBack();
                                }
                        }
                    });
                };
                reader.readAsArrayBuffer(file);
                
        }
            
             
            j$(document).ready(function()
            {
            
                 var dType = detectDeviceType();
                 if (dType == 'Desktop')
                 {
                    j$("#btnReplyAdd").hide();
                    j$("#btnAdd").show();
                    maxFiles = 10;
                 }
                 else
                 {
                    j$('#fileuploaddiv').hide();
                    j$("#btnAdd").hide();
                    j$("#btnReplyAdd").show();
                    maxFiles = 10;
                 }
                sforce.connection.sessionId = '{!$Api.Session_ID}'; 
                sforce.connection.serverUrl = '/customermessagingcenter' + sforce.connection.serverUrl;  
                
                
                
                validate();
                loadData();
                j$("#uploadButton").click(function(){
                    prepareFileUploads();
                });
                 filemodel = new FileUploadViewModel();
                try
                {
                ko.applyBindings(filemodel,document.getElementById('FileUploadBindDiv'));
                }
                catch(e)
                {
                alert(e);
                } 
                
                
            });
            function getRTEValue()
            {
                            var iframe = j$('#cke_1_contents iframe')[0];
                            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
                            var h = iframeDocument.getElementById('DisplayCaseandCasecomment:DisplayCaseandCasecommentForm:message_rta_body');
                            return j$(h).html();
            }
            function getRTETextValue()
            {
                            var iframe = j$('#cke_1_contents iframe')[0];
                            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
                            var h = iframeDocument.getElementById('DisplayCaseandCasecomment:DisplayCaseandCasecommentForm:message_rta_body');
                            return j$(h).text();
            }
            function setRTEValue(html)
            {
                            var iframe = j$('#cke_1_contents iframe')[0];
                            var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
                            var h = iframeDocument.getElementById('DisplayCaseandCasecomment:DisplayCaseandCasecommentForm:message_rta_body');
                            j$(h).html(html);
            }
            var addattachmentglobal;;
            function submitform(addattachment)
            {
                debugger;
                            casecomment = getRTEValue();
                            //var casecommentcopy = casecomment;
                            var casecommenttext = getRTETextValue();
                            casecommenttext = casecommenttext.replace(/[\u200B-\u200D\uFEFF]/g, '');
                
                			 
                           
                			if (casecommenttext != '')
                            {
                                if(casecommenttext.trim() == '' && casecommenttext != '')
                                {
                                    casecomment = 'No actual comment by member.';
                                }
                                j$('#commenttext').val(casecomment);
                            }
                            else
                            {
                                j$('#commenttext').val('');
                            }
                            var dtype ;
                            if(isMobile.phone)
                               {
                                 dtype = 'Mobile';
                                 
                                    
                                  
                               }
                               
                               //Check for all Tablet
                               if(isMobile.tablet)
                               {
                                  dtype = 'Tablet'; 
                               }
                               
                               //Check if Desktop 
                               if(!isMobile.any)
                               {
                                  dtype = 'Desktop';
                               }
                               
                              
                        
                if(j$('[id$=DisplayCaseandCasecommentForm]').valid() && (casecommenttext != ''))
                    {
                            var pid;
                            checkFileSize();
                            //casecomment = j$('[id$=message]').val();
                            
                            if(checkfilesize=='1')
                            {
                                
                               addattachmentglobal = addattachment;
                                    DisplayCaseController.ButtonReply_Click(model.Id(),casecomment,dtype, Callback);
                                
                            }
                        
                    }
                    else
                    {
                        j$('.error').addClass('text text-danger');
                    
                    }
                
            }
            
            function Callback(result,event)
            {   
                var dtype ;
                if(isMobile.phone)
                   {
                     dtype = 'Mobile';
                     
                        
                      
                   }
                   
                   //Check for all Tablet
                   if(isMobile.tablet)
                   {
                      dtype = 'Tablet'; 
                   }
                   
                   //Check if Desktop 
                   if(!isMobile.any)
                   {
                      dtype = 'Desktop';
                   }
                
                
                
                if (addattachmentglobal && dtype != 'Desktop')
                {
                    window.location.href='{!$Site.Prefix}/AddAttachment?entityType=notes&SB={!SortBy}&SD={!SD}&parentType=' + TypeofView +'&parentId=' + result;
                }
            
                
                pid = result;
                //j$('[id$=cmdSave]').click();
                //j$('[id$=message]').val('');
                setRTEValue('');
                j$('#commenttext').val();
                j$('#parentid').val(pid);
                //checkFileSize();
                var hasFiles = false;
                j$(".UploadInputfiles").each(function () {
                    var f = document.getElementById(j$(this).attr('id')).files;
                    if (f.length > 0 && checkfilesize=='1' ) 
                    {
                        hasFiles = true;
                        
                    };
                    if (f.length > 0 && checkfilesize=='0' ) 
                    {
                        hasFiles = false;
                    };
                });
                if (!hasFiles)
                {
                    reloadMessages();
                }
                
                callFileUpload();
            
                
            }
            
            function CallButtonDelete_Click()
            {
                
                    DisplayCaseController.ButtonDelete_Click(model.Id(),DeleteCallback);
                    
            }
            function DeleteCallback(result,event)
            {   
                j$.blockUI({ css: { 
                    border: 'none', 
                    padding: '15px', 
                    backgroundColor: '#000', 
                    '-webkit-border-radius': '10px', 
                    '-moz-border-radius': '10px', 
                    opacity: .5, 
                    color: '#fff' 
                } }); 
         
               setTimeout(j$.unblockUI, 300);
                j$('#deletelinktop').text('Deleted') ;
                j$('#deletelinkbottom').text('Deleted') ;
                window.location.href='{!$Site.CurrentSiteUrl}ShowCases?Type={!typeparam}';
                
            }
            
            
            function CallButtonSave_Click()
            {
                
                DisplayCaseController.ButtonSave_Click(model.Id(),SaveCallback);
                
            }
            
            function SaveCallback(result,event)
            {
                j$.blockUI({ css: { 
                    border: 'none', 
                    padding: '15px', 
                    backgroundColor: '#000', 
                    '-webkit-border-radius': '10px', 
                    '-moz-border-radius': '10px', 
                    opacity: .5, 
                    color: '#fff' 
                } }); 
         
               setTimeout(j$.unblockUI, 300); 
               
                j$('#savelinktop').text('Saved') ;
                j$('#savelinkbottom').text('Saved') ;
                 window.location.href='{!$Site.CurrentSiteUrl}ShowCases?Type={!typeparam}';
            }
            
            function toggleClass(obj)
            {
                if(j$(obj).hasClass('glyphicon glyphicon-chevron-up'))
                {
                    j$(obj).removeClass('glyphicon glyphicon-chevron-up');
                    j$(obj).addClass('glyphicon glyphicon-chevron-down');
                    
                }
                else
                {
                    j$(obj).removeClass('glyphicon glyphicon-chevron-down');
                    j$(obj).addClass('glyphicon glyphicon-chevron-up');
                    
                }
                
                    
            }
            
            function toggletext(obj)
            {
                if(j$(obj).hasClass('toggle-text'))
                {
                    (j$(".textchange").text() === "Expand All") ? j$(".textchange").text("Collapse All") : j$(".textchange").text("Expand All");
                    
                    if(j$(obj).children("span").hasClass('glyphicon glyphicon-chevron-up'))
                    {
                        j$(obj).children("span").removeClass('glyphicon glyphicon-chevron-up');
                        j$(obj).children("span").addClass('glyphicon glyphicon-chevron-down');
                        if(j$(".toggleComment").hasClass('glyphicon glyphicon-chevron-up'))
                        {
                            j$(".toggleComment").removeClass('glyphicon glyphicon-chevron-up');
                            j$(".toggleComment").addClass('glyphicon glyphicon-chevron-down');
                            
                            j$('.long').collapse('hide'); 
                            j$('.short').collapse('show'); 
                        }
                        
                        
                    }
                    else
                    {
                        j$(obj).children("span").removeClass('glyphicon glyphicon-chevron-down');
                        j$(obj).children("span").addClass('glyphicon glyphicon-chevron-up');
                        if(j$(".toggleComment").hasClass('glyphicon glyphicon-chevron-down'))
                        {
                            j$(".toggleComment").removeClass('glyphicon glyphicon-chevron-down');
                            j$(".toggleComment").addClass('glyphicon glyphicon-chevron-up');
                            j$('.long').collapse('show') ;
                            j$('.short').collapse('hide'); 
                        }
                        
                    }
                    
                }
            }
            function GetPreviousId()
            {
                j$.blockUI({ css: { 
                    border: 'none', 
                    padding: '15px', 
                    backgroundColor: '#000', 
                    '-webkit-border-radius': '10px', 
                    '-moz-border-radius': '10px', 
                    opacity: .5, 
                    color: '#fff' 
                } }); 
         
               setTimeout(j$.unblockUI, 500); 
                DisplayCaseController.LoadPreviousCase('{!typeparam}','{!SortBy}','{!SortDirection}',model.Id(), function(result, event)
                {
                    
                    result.LatestCommentBySupport = decodeEntities(result.LatestCommentBySupport);
                    result.ShortDescription = decodeEntities(result.ShortDescription);
                    result.Description = decodeEntities(result.Description);
                    ko.mapping.fromJS(result, model);
                    if(model.Status() == 'Closed' && model.Days_after_closed_date() > allowedDaysAfterClose)
                    {
                        j$('#commentinputdiv').css('display', 'none'); 
                        j$('#commentinputerror').show();
                    }
                    else
                    {
                        j$('#commentinputdiv').css('display', 'block');
                        j$('#commentinputerror').hide(); 
                    }
                    
                    reloadMessages();
                });
                
            }
            function GetNextId()
            {
                j$.blockUI({ css: { 
                    border: 'none', 
                    padding: '15px', 
                    backgroundColor: '#000', 
                    '-webkit-border-radius': '10px', 
                    '-moz-border-radius': '10px', 
                    opacity: .5, 
                    color: '#fff' 
                } }); 
         
               setTimeout(j$.unblockUI, 500); 
                DisplayCaseController.LoadNextCase('{!typeparam}','{!SortBy}','{!SortDirection}',model.Id(), function(result, event)
                {
                    result.LatestCommentBySupport = decodeEntities(result.LatestCommentBySupport);
                    result.ShortDescription = decodeEntities(result.ShortDescription);
                    result.Description = decodeEntities(result.Description);
                    ko.mapping.fromJS(result, model);
                    
                    if(model.Status() == 'Closed' && model.Days_after_closed_date() > allowedDaysAfterClose)
                    {
                        j$('#commentinputdiv').css('display', 'none'); 
                        j$('#commentinputerror').show();
                    }
                    else
                    {
                        j$('#commentinputdiv').css('display', 'block');
                        j$('#commentinputerror').hide(); 
                    }
                    
                    reloadMessages();
                    
                });
            }
        
            function reloadData()
            {
                blockUi('Loading...');
                DisplayCaseController.LoadCase('{!typeparam}','{!SortBy}','{!SortDirection}',model.Id(), function(result, event)
                {
                    j$.unblockUI();
                    result.LatestCommentBySupport = decodeEntities(result.LatestCommentBySupport);
                    result.ShortDescription = decodeEntities(result.ShortDescription);
                    result.Description = decodeEntities(result.Description);
                    
                    ko.mapping.fromJS(result,model);
                    if(model.Status() == 'Closed' && model.Days_after_closed_date() > allowedDaysAfterClose)
                    {
                        j$('#commentinputdiv').css('display', 'none'); 
                        j$('#commentinputerror').show();
                    }
                    else
                    {
                        j$('#commentinputdiv').css('display', 'block');
                        j$('#commentinputerror').hide(); 
                    }
                    
                reloadMessages();
                
                });
                
                
            }
            
            function reloadMessages()
            {
                blockUi('Loading...');
                DisplayCaseController.LoadMemberComments(model.Id(),function(result,event)
                {
                    j$.unblockUI();
                   
                    for(var i = 0; i <result.membermessage.length; i++)
                    { 
                        result.membermessage[i].FullComment = decodeEntities(result.membermessage[i].FullComment);
                        result.membermessage[i].ShortComment = decodeEntities(result.membermessage[i].ShortComment);
                    }
                    
                    ko.mapping.fromJS(result,commentmodel)
                    bindMessagetoggle();
                    
                });
            
            }
            function bindMessagetoggle()
            {
                j$('.PMlist .longdata').hide();
                j$('.PMlist .toggleComment').click(function(){
                  var $button = j$(this);
                  $button.siblings('.longdata').slideToggle('fast', function () {
                    if($button.siblings('.longdata').is(':visible')){
                      $button.siblings('.shortdata').hide();
                      $button.removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                    }
                    else{
                      $button.siblings('.shortdata').show();
                      $button.removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
                    }
                  });
                });
                
                j$('#expAll').click(function(){
                    //$(this).text('Collapse All');
                    var $button = j$('.PMlist li .collapsedata');
                    $button.toggleClass('liExpanded');
                    
                    if($button.hasClass('liExpanded')){
                      j$(this).text('Collapse All');
                      $button.children('.shortdata').hide();
                      $button.children('.longdata').show();
                      $button.children('.toggleComment').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
                    }
                    else{
                      j$(this).text('Expand All');
                      $button.children('.shortdata').show();
                      $button.children('.longdata').hide();
                      $button.children('.toggleComment').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');              
                    }
              });
            
            }
            function loadData()
            {
                blockUi('Loading...');
                DisplayCaseController.LoadCase('{!typeparam}','{!SortBy}','{!SortDirection}','{!caseid}', function(result, event)
                {
                    j$.unblockUI();
                    result.LatestCommentBySupport = decodeEntities(result.LatestCommentBySupport);
                    result.ShortDescription = decodeEntities(result.ShortDescription);
                    result.Description = decodeEntities(result.Description);
                    model = ko.mapping.fromJS(result);
                    
                    ko.applyBindings(model, document.getElementById('messageBindDiv'));
                    ko.applyBindings(model, document.getElementById('bottomMessageBindDiv'));
                    //ko.applyBindings(model, document.getElementById('bottomMessageBindDiv1'));
                    //model.fileupload = new fileuploadmodel
                    if(model.Status() == 'Closed' && model.Days_after_closed_date() > allowedDaysAfterClose)
                    {
                        j$('#commentinputdiv').css('display', 'none'); 
                        j$('#commentinputerror').show();
                    }
                    else
                    {
                        j$('#commentinputdiv').css('display', 'block');
                        j$('#commentinputerror').hide(); 
                    }
                    
                });
            
                DisplayCaseController.LoadMemberComments('{!caseid}', function(result, event)
                {
                    
                    
                    for(var i = 0; i <result.membermessage.length; i++)
                    { 
                        result.membermessage[i].FullComment = decodeEntities(result.membermessage[i].FullComment);
                        result.membermessage[i].ShortComment = decodeEntities(result.membermessage[i].ShortComment);
                    }
                    
                    commentmodel = ko.mapping.fromJS(result);
                    
                    ko.applyBindings(commentmodel,document.getElementById('CommentBindDiv'));
                    //ko.applyBindings(commentmodel,document.getElementById('CommentBindDiv1'));
                    bindMessagetoggle();
                });
                
            }
              
            function validate()
            {
                    
                 j$('[id$=DisplayCaseandCasecommentForm]').validate();      
                
                 j$('[id$=commenttext]').rules("add", {
                                required: true,   });
                               
               
            }
            
          /* File Upload code here*/
           function fileupload()
            {
                 var self = this;
                 self.name = ko.observable();
                 
           
            }
            function FileUploadViewModel()
            {
                    
                    var self = this;
                    self.FileUploadList = ko.observableArray();
                    self.remove = function () {
                        self.FileUploadList.remove(this);
                         countAddFile = countAddFile-1;
                    };
                    self.add = function () {
                   var dType = detectDeviceType();
                        
                        j$('#fileuploadinnerdiv').removeClass('hidden');
                     
                        if (self.FileUploadList() == null)
                        {
                            
                        }
                        else
                        {
    
                            if(countAddFile >= maxFiles )
                            {
                                showCustomAlert('You can add ' + maxFiles  + ' files at most per message.');
                            }
                            else
                            {
                                self.FileUploadList.push(new fileupload(""));
                                countAddFile = countAddFile + 1;
                            }
                        }
                        
                        if(j$(window).width() < 1025){
                    j$('.des4').each(function() {
                        if(j$(this).children('.uploadfile').val() == ""){
                            j$(this).children('label.lblfilename').show();
                            j$(this).children('span.spanfilename').hide();
                        }
                        else {
                          j$(this).children('label.lblfilename').hide();
                          j$(this).children('span.spanfilename').show();
                        }
                    });
                  }
                  
                       
                    };
                
            }
            
          
            function callFileUpload()
            {
                prepareFileUploads();
                //window.location.href='{!$Site.Prefix}/ShowCases?Type=Messages';
                    
            }
          var byteChunkArray; 
            var files = [];
            var currentFile;
            var $upload;
            var CHUNK_SIZE = 180000; //Must be evenly divisible by 3, if not, data corruption will occur
            var VIEW_URL = '/servlet/servlet.FileDownload?file=';
            
            function checkFileSize()
            {
                 var blockedExtension = '{!Extension}'  
                 var flagforupload = [];
                parentId = j$('#parentid').val();
                var filesposition = [];
                var k = 0;
        files = [];
                j$(".UploadInputfiles").each(function () {
                    var f = document.getElementById(j$(this).attr('id')).files;
                    if (f.length > 0) 
                    {
                        files.push(f[0])
                        filesposition.push(k);
                    };
                    k++;
                });
                
                //Disable inputs and buttons during the upload process
                j$(".uploadBox input").attr("disabled", "disabled");
                j$(".uploadBox button").attr({
                    disabled: "disabled",
                    class: "btnDisabled"
                });
              
                //Build out the upload divs for each file selected
                var uploadMarkup = '';
                if(files.length == 0)
                {
                    checkfilesize='1';
                }
                else
                {
                    checkfilesize='0';
                }
                if(files.length >0 )
                {
                    var ext ;   
                    var bextns = blockedExtension.split(',');
                    for(var i =0 ; i< files.length; i++)
                    {
                        var j = 0;              
                        var n = files[i].name.lastIndexOf('.');
                                ext = files[i].name.substring(n + 1);
                                flagforupload[i] = false;
                                for(var k=0; k< bextns.length; k++)
                                {
                                 if(bextns[k].trim().toLocaleUpperCase() ==  ext.toLocaleUpperCase())
                                    {
                                        
                                                
                                        flagforupload[i]= true;
                                        j$('#errorMessage'+ filesposition[i]).text('');
                                        j$('#erroricon'+ filesposition[i]).removeClass('glyphicon');
                                        j$('#erroricon'+ filesposition[i]).removeClass('glyphicon-exclamation-sign');
                                        break;
                                            
                                        
                                /*      flagforupload[i]= false;
                                        j$('#errorMessage'+ filesposition[i]).text('File type is not allowed.');
                                        j$('#erroricon'+ filesposition[i]).addClass('glyphicon glyphicon-exclamation-sign');
                                        j++;
                                    */      
                                    }
                                    
                                
                                }
                                if(flagforupload[i]== false)
                                {
                                    j$('#errorMessage'+ filesposition[i]).text('File type is not allowed.');
                                    j$('#erroricon'+ filesposition[i]).addClass('glyphicon glyphicon-exclamation-sign');
                                    j++;
                                    
                                }
                                
                                if(j > 0 )
                                {
                                //  files.length =0;
                                }
                        
                    }
                    
                    
                    if(j$.inArray(false, flagforupload) !== -1)
                    {
                        
                        //alert('You cannot upload file with extension:' + blockedExtension );
                        
                        j$(".uploadBox input").removeAttr("disabled");
                        j$(".uploadBox button").removeAttr("disabled").attr("class","btn");
                         j$(".removebutton").removeAttr("disabled"); 
                        j$(".submitbutton").removeAttr("disabled"); 
                        return;
                        
                    }
                for (i = 0; i < files.length; i++) {
                    //Determine file display size
                    if(files[i].size < 10485760 ){
                        checkfilesize='1';
                        var displaySize = Math.floor(files[i].size/1024) + 'KB';
                    }else if(files[i].size > 10485760 ){
                        
                        //alert('File size is greater than 2 MB');
                        j$(".uploadBox input").removeAttr("disabled");
                        j$(".uploadBox button").removeAttr("disabled").attr("class","btn");
                        //j$('.UploadInputfiles').val('');
                        //j$('#filesInput'+ i).val('');
                        j$('#errorMessage'+ filesposition[i]).text('File size is greater than 10 MB');
                        j$('#erroricon'+ filesposition[i]).addClass('glyphicon glyphicon-exclamation-sign');
                        files[i].size = 0;
                        checkfilesize='0';
                        files.length = 0;
                        uploadMarkup='';
                        break;
                        
                    }
                    else
                    {
                        checkfilesize='1';
                        var displaySize  = Math.round((files[i].size / 1048576)*10)/10 + 'MB';
                    }
                    
                     uploadMarkup += '<div class="upload" style="display:none" data-status="pending" data-index="'+i+'">'; //index used to correspond these upload boxes to records in the files array
                        uploadMarkup += '<div class="fileName"><span class="name">'+ files[i].name + '</span> - '+ displaySize+ '</div>';
                        uploadMarkup += '<div class="percentComplete">0%</div>'
                        uploadMarkup += '<div class="clear"/>';
                        uploadMarkup += '<div class="statusBar">';
                        uploadMarkup += '<div class="statusBarPercent"/>';
                        uploadMarkup += '</div>';
                        uploadMarkup += '</div>';
                    
                }
                
                j$('.uploadBox').append(uploadMarkup);
            }
            }
            //var parentId, you will see this variable used below but it is set in the component as this is a dynamic value passed in by component attribute
            
            //Executes when start Upload button is selected
            function prepareFileUploads(){
                parentId = j$('#parentid').val();
                checkForUploads();
                
            }
            function blockUi (message)
            {
                    j$.blockUI({ css: { 
                        border: 'none', 
                        padding: '15px', 
                        backgroundColor: '#000', 
                        '-webkit-border-radius': '10px', 
                        '-moz-border-radius': '10px', 
                        opacity: .5, 
                        color: '#fff' 
                        },
                         message: '<h1>' + message + '</h1>' 
                        
                        }); 
            }
            function checkForUploads(){
                //Get div of the first matching upload element that is 'pending', if none, all uploads are complete
                $upload = j$(".upload[data-status='pending']").first();
                
                if($upload.length != 0){
                    //Based on index of the div, get correct file from files array
                    currentFile = files[$upload.attr('data-index')];
                    
                    if ((navigator.userAgent.indexOf("MSIE") != -1) ||(!!document.documentMode == true ))
                    {
                        blockUi('Uploading ' + currentFile.name);
         
               
                        uploadFileIE(currentFile, parentId, function success(attachmentId)
                        {
                            $upload.attr('data-status','complete');
                    
                            //Change name of file to link of uploaded attachment
                            $upload.find(".name").html('<a href="' + VIEW_URL + attachmentId + '" target="_blank">'+currentFile.name+'</a>');
                            j$.unblockUI();
                            //Call the checkForUploads to find the next upload div that has data-status="incomplete" and start the upload process. 
                            checkForUploads();
                        }, function failure()
                        {
                            $upload.attr('data-status','complete');
                            $upload.addClass('uploadError');
                            $upload.find(".statusPercent").addClass('statusPercentError');
                            $upload.attr('title',event.message);
                            j$.unblockUI();
                        });
                    }
                    else
                    {
                        blockUi('Uploading ' + currentFile.name);
                        uploadFileChromeFF(currentFile, parentId, function success(attachmentId)
                        {
                            $upload.attr('data-status','complete');
                    
                            //Change name of file to link of uploaded attachment
                            $upload.find(".name").html('<a href="' + VIEW_URL + attachmentId + '" target="_blank">'+currentFile.name+'</a>');
                            j$.unblockUI();
                            //Call the checkForUploads to find the next upload div that has data-status="incomplete" and start the upload process. 
                            checkForUploads();
                        }, function failure()
                        {
                            $upload.attr('data-status','complete');
                            $upload.addClass('uploadError');
                            $upload.find(".statusPercent").addClass('statusPercentError');
                            $upload.attr('title',event.message);
                            j$.unblockUI();
                        });
                    }
                    
                    
                       
                }
                else
                {
                    filemodel.FileUploadList([]);
                    j$('.upload').remove();
                    j$('.uploadBox').addClass('hidden');
                    reloadMessages();
                    files = [];
                    countAddFile =0;
                }
            }
            
        </script>
            <script type="text/javascript">
            j$ = jQuery.noConflict();
                var parentId = ''; //Will be used by FileUploadJS.js but must be declared here. Static resources don't support dynamic values.
                var siteUrl = '{!$Site.CurrentSiteUrl}';
                function downloaddoc()
                {
                 var url = j$(this)[0].downloadurl();
                    var fileName = j$(this)[0].filename(); 
                    fileName =  fileName.split('.').pop().toLowerCase();
                        if(detectDeviceType() == 'Desktop')
                        {
                            
                            window.open(siteUrl + url);
                            
                        }
                        else
                        {
                            if(fileName == 'png' || fileName == 'jpg' || fileName == 'jpeg' || fileName == 'bmp' || fileName == 'gif')
                            {
                                    //alert(siteUrl + url);

                                    if (fileName == 'bmp')
                                    {
                                        window.location.href = siteUrl + url;
                                    }
                                    else
                                    {
                                        window.location.href = siteUrl + url;
                                    }                                    
                                
                            }
                            else
                            {
                                    //alert(siteUrl + url + '&pdf=1');
                                    window.location.href  = siteUrl + url + '&pdf=1';
                            }
                            
                        }
                        return false;
/*
                    
                  
                    
                    if(fileName == 'png' || fileName == 'jpg' || fileName == 'jpeg' || fileName == 'bmp' || fileName == 'gif')
                    {
                        j$("#imgImageContent").attr('src', siteUrl + url);
                        j$("#imgImageContentDiv").show();
                        j$(".content_area").hide();
                        j$("#imgImageContent").show();
                        j$("#ifrmOtherContent").hide();
                        
                    }
                    else
                    {
                    
                    
                        
                        else
                        {
                            j$("#ifrmOtherContent").attr('src', siteUrl + url);
                            j$("#imgImageContentDiv").show();
                            j$("#imgImageContent").hide();
                            j$("#ifrmOtherContent").show();
                            j$(".content_area").hide();
                        }
                        
                        
                    }*/
                    
                    return true;
                }
                
                
            j$(document).ready(function(){
            
                j$('#back-to-top').on('click', function (e) {
                    e.preventDefault();
                    j$('html,body').animate({
                        scrollTop: 0
                    }, 700);
                });
                
               // if(j$('.svdellinks #savelinkbottom').text == "" || j$('.svdellinks #deletelinkbottom').text == ""){
               //   j$('.svdellinkpipe').hide();
               //   j$('.svdellinks #savelinkbottom').css("paddingTop", "12px");
               //   j$('.svdellinks #deletelinkbottom').css("paddingTop", "12px");
               // }
               // else if(j$('.svdellinks #savelinkbottom').text == "" && j$('.svdellinks #deletelinkbottom').text == ""){
               //   j$('.svdellinkpipe').hide();
                //  j$('.svdellinks #savelinkbottom').css("padding", 0);
               //   j$('.svdellinks #deletelinkbottom').css("padding", 0);
               // }
               // else if(j$('.svdellinks #savelinkbottom').text == "" && j$('.svdellinks #deletelinkbottom').text == ""){
               // }
            });
                
            </script>
            <script type="text/javascript">
            j$ = jQuery.noConflict();
            // File Attachment Design JQUERY Start
            j$(document).on('change', '.inputfiles .uploadfile', function(){
              var fileval = j$(this).val().split('\\').pop();
                j$(this).siblings('span.spanfilename').html(fileval);
             // if(j$(this).parent().hasClass('des4') && j$(fileval) != ""){
             //   j$(this).siblings('span.spanfilename').show();
             //   j$(this).siblings('label.lblfilename').hide();
             // }
             // else if(j$(this).parent().hasClass('des4')){
             //   j$(this).siblings('span.spanfilename').hide();
             //   j$(this).siblings('label.lblfilename').show();
             // }
              if(j$(window).width() < 1025){
                    j$('.des4').each(function() {
                        if(j$(this).children('.uploadfile').val() == ""){
                            j$(this).children('label.lblfilename').show();
                            j$(this).children('span.spanfilename').hide();
                        }
                        else {
                          j$(this).children('label.lblfilename').hide();
                          j$(this).children('span.spanfilename').show();
                        }
                    });
                  }
                 else{
                    j$('.des4').each(function() {
                        j$(this).children('label.lblfilename').hide();
                        j$(this).children('span.spanfilename').hide();
                    });
                 }
            });
            
         j$(document).ready(function(){     
            j$(window).on('resize', function(){
                  if(j$(window).width() < 1025){
                    j$('.des4').each(function() {
                        if(j$(this).children('.uploadfile').val() == ""){
                            j$(this).children('label.lblfilename').show();
                            j$(this).children('span.spanfilename').hide();
                        }
                        else {
                          j$(this).children('label.lblfilename').hide();
                          j$(this).children('span.spanfilename').show();
                        }
                    });
                  }
                  else{ 
                    j$('.des4').each(function() {
                        j$(this).children('label.lblfilename').hide();
                        j$(this).children('span.spanfilename').hide();
                    });
                  }
                }).resize();
         });
          // File Attachment Design JQUERY End
        
        </script>
        <script>
            function showCustomAlert(msg)
            {
                var isBlocked=false;
                if (j$(".blockUI").is(":visible"))
                {
                    j$.unblockUI();
                    isBlocked=true;
                }
                
                j$("#DialogText").html(msg);
                //j$(".showDialog").click();
                
                j$('#myModal').modal({
                    backdrop:'static',
                    keyboard:false
                    }).one('click','.btn',function(e)
                    {
                        if (isBlocked)
                        {
                            j$.blockUI();
                        }
                    });
            }
            
            function detectDeviceType()
            {
                var dtype ;
                if(isMobile.phone)
                   {
                     dtype = 'Mobile';
                   }
                   
                   //Check for all Tablet
                   if(isMobile.tablet)
                   {
                      dtype = 'Tablet'; 
                   }
                   
                   //Check if Desktop 
                   if(!isMobile.any)
                   {
                      dtype = 'Desktop';
                   }
                   
                   return dtype;
            }
            
            function clickReadMethod(obj)
            {
            
            	
            	var commentid = ko.dataFor(obj).commentid();
            	var IsRead = ko.dataFor(obj).IsRead();
            	//UpdateIsMarkRead
            	if(!IsRead)
            	{
	            	DisplayCaseController.UpdateIsMarkRead(commentid, function(result, event)
	                {
	                    ko.dataFor(obj).IsRead(true);
	                });
                }
            	
            }
            
        </script>
        </html>
        </apex:page>