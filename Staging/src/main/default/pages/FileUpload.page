<apex:page >
    <script type="text/javascript">__sfdcSessionId = '{!$Api.Session_Id}';</script>
    <script src="../../soap/ajax/30.0/connection.js" type="text/javascript"></script>

    <script>
    var filesUploaded = 0;
	var lexOrigin = 'https://{!$CurrentPage.parameters.lcHost}';
   
        function fileSelected() {      
            var file = document.getElementById('fileToUpload').files[0];
            if (file) {
                var fileSize = 0;
                if (file.size > (36 * 1024 * 1024)) {
                    alert('File too large, greater than 36MB');
                    return;
                }
                if (file.size > 1024 * 1024)
                    fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
                else
                    fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
            }
        }

        function uploadFile() {
        debugger;
        if(document.getElementById('fileToUpload').files.length == 0){
        	alert('No Files Selected');
        	return;
        }
        var allfiles = document.getElementById('fileToUpload').files;
        var input = document.getElementById("fileToUpload");
         var filesToUpload = input.files;  
         for(var i = 0, f; f = filesToUpload[i]; i++)
          {
         	var FileSize = input.files[i].size / 1024 / 1024; // in MB
        	if (FileSize > 25) {
            	alert('Following File(s) size exceeds 25 MB.' + input.files[i].name);
            	$(file).val(''); //for clearing with Jquery
            	return;
        	}
        }
        document.getElementById("btnUploadFile").disabled = true;
        document.getElementById("btnUploadFile").style.cursor = "default";
        document.getElementById("btnUploadFile").style.backgroundColor = "rgb(255, 255, 255)";
        document.getElementById("btnUploadFile").style.borderColor  = "rgb(221, 219, 218)";
        document.getElementById("btnUploadFile").style.color = "rgba(27, 82, 151, 1.0)";
        document.getElementById("fileToUpload").disabled = true;
        sendToLC({'state': 'Uploading', 'message': '', 'messageType': ''});					
            
          for(var i = 0, f; f = filesToUpload[i]; i++)
          {
            var reader = new FileReader();
            // Keep a reference to the File in the FileReader so it can be accessed in callbacks
            reader.file = f;
            reader.onload = function(e)
            {
              var att = new sforce.SObject("Attachment");
              att.Name = this.file.name;
              att.ContentType = this.file.type;
              att.ParentId = '{!$CurrentPage.parameters.id}'
              var binary = "";
              var bytes = new Uint8Array(e.target.result);
              var length = bytes.byteLength;
              var errormsg="";
              for (var i = 0; i < length; i++)
              {
                binary += String.fromCharCode(bytes[i]);
              }
              att.Body = (new sforce.Base64Binary(binary)).toString();
              sforce.connection.create([att],
              {
                onSuccess : function(result, source)
                {
                  if (result[0].getBoolean("success"))
                  {
                  	filesUploaded = filesUploaded + 1;
                  	debugger;
                  	if(document.getElementById('fileToUpload').files.length ==  filesUploaded)
                  	{
                  		filesUploaded = 0;
                  		console.log("new attachment created with id " + result[0].id);                    
                    	sendToLC({'state': 'fileUploadprocessed', 'message': 'File was uploaded successfully', 'messageType': 'success' , 'ErrorStr' : errormsg});
                  	}
                    					
                  }
                  else
                  {                 	
                  	errormsg = errormsg + att.Name;
                  	filesUploaded = filesUploaded + 1;
                  	if(document.getElementById('fileToUpload').files.length ==  filesUploaded)
                  	{                  	                  
                    	sendToLC({'state': 'ErrorOccured', 'message': 'File was uploaded successfully', 'messageType': 'success', 'ErrorStr' : errormsg});
                  	}
                    console.log("failed to create attachment " + result[0]);
                  }
                },
                onFailure : function(error, source)
                {                	
                  console.log("an error has occurred " + error);
                }
              });
              
            };
            reader.readAsArrayBuffer(f);
          }

        }
      
        function sendToLC(message) {
            if(typeof(lexOrigin) != 'undefined'){
                parent.postMessage(message, lexOrigin);
            }
        }

</script>
<style>
.slds-button{
padding-left: 1rem;
    padding-right: 1rem;
    text-align: center;
    vertical-align: middle;
    border: 1px solid rgb(221, 219, 218);   
    transition: border .15s linear;
    background-color: rgba(27, 82, 151, 1.0);
    border-color: rgba(27, 82, 151, 1.0);
    color: rgb(255, 255, 255);
       
    display: inline-block;
    padding: 0;
   	width: 75px;
    background-clip: border-box;
  
    border-radius: .25rem;
    line-height: 1.875rem;
    text-decoration: none;
   
    -webkit-appearance: none;
    white-space: normal;
   
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: pointer;
}
</style>

    <title>Upload Files using XMLHttpRequest - Minimal</title>
    <form id="form1" enctype="multipart/form-data" method="post">
    <table>
    <tr>
    <td>
    	 <div class="row">
  
          <input type="file" name="fileToUpload" id="fileToUpload" onchange="fileSelected();" multiple="multiple"/>
        </div>
    </td>
    <td>
    	 <div class="row">
            <input type="button" onclick="uploadFile()" value="Upload" class="slds-button" id="btnUploadFile"/>
        </div>
    </td>
    </tr>
    </table>
       
        
       
  </form>
</apex:page>